{"version":3,"sources":["Dict.jsx","containers/layouts/PanelRightPage.jsx","dispatcher.js","stores/ModelStore.js","actions/MyActions.js","containers/actuals/options.jsx","containers/actuals/form.jsx","containers/actuals/list.jsx","containers/metas/show.jsx","components/metas/show.jsx","containers/metas/list.jsx","containers/metas/index.jsx","components/metas/index.jsx","containers/metas/form.jsx","components/metas/create.jsx","components/metas/update.jsx","containers/interactions/menu.jsx","containers/shares/menu.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/posts/show.jsx","components/posts/show.jsx","containers/posts/list.jsx","containers/posts/index.jsx","components/users/loggedIn.js","components/posts/index.jsx","containers/channels/options.jsx","containers/posts/form.jsx","components/posts/uploader.js","components/posts/create.jsx","components/posts/update.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","components/notifications/index.jsx","containers/channels/show.jsx","components/channels/show.jsx","containers/channels/list.jsx","containers/channels/index.jsx","components/channels/index.jsx","containers/channels/form.jsx","components/channels/uploader.js","components/channels/create.jsx","components/channels/update.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/channels/compactlist.jsx","containers/profiles/experties.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/users/Login.jsx","components/users/Login.jsx","containers/users/SignUp.jsx","routes.js","containers/layouts/HomePage.jsx","components/users/SignUp.jsx","containers/layouts/NotFoundPage.jsx","serviceWorker.js","index.js","components/App.jsx","js/fa.js"],"names":["dict","PanelRightPage","logout","bind","state","token","window","localStorage","getItem","this","setState","removeItem","location","reload","Fragment","user_settings","view","panelClose","onClick","className","social","link","ignoreCache","reloadCurrent","posts","channels","profiles","notifications","settings","roles","metas","title","login","Shoa","logged_in","Component","Dispatcher","modelStore","list","instance","klass","console","log","data","i","len","length","push","emit","action","type","listModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","server","getList","model","page","params","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","ActualOptions","props","options","value","content","fid","ActualForm","meta","meta_schema","items","label","placeholder","onInput","e","onChangeValue","target","name","smartSelect","smartSelectParams","pageBackLinkText","back","onChange","submit","fill","form","ActualList","actuals","body","td","j","crypto","lib","WordArray","random","defaultValue","editable","metaId","color","removeActual","uuid","ios","aurora","md","MetaShow","simple-list","JSON","stringify","handleChangeValue","Layout","fields","ModelStore","on","removeListener","MyActions","$f7route","getIntance","getKlass","newState","assign","concat","meta_id","href","position","slot","backLink","fab","MetaList","mediaList","after","subtitle","text","MetaIndex","loadData","Framework7","toast","show","receiving","closeTimeout","React","MetaForm","handleChange","inputStyle","direction","metaSchema","MetaCreate","obj","$f7router","navigate","meta_form","editing","DocumentUpdate","InteractionMenu","social_acts","bookmarked","interaction","sourceType","sourceId","bookmark","bookmarks","liked","like","likes","followed","follow","follows","cancel","actionsOpen","ShareMenu","opened","sheetOpened","onSheetClosed","sheetClose","close","channel","channel_id","icon","strong","tag","sheetOpen","class","CommentForm","comment_form","comment","maxlength","resizable","clearButton","commentContent","CommentList","comments","time","removeComment","locale","fromNow","ago","created_at","src","profile","avatar","width","inset","noGap","loadMore","more","PostShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","tabletWidth","toolbar","readOnly","submitComment","$$","f7","dialog","alert","interaction_type","interactionable_id","interactionable_type","source_type","source_id","post_id","$f7","sheet","PostList","tooltip","fullname","height","substring","PostIndex","pageContent","panelOpen","inner","disableButtonText","search","query","tabbar","bottom","tabLink","tabLinkActive","swipeable","tabActive","loggedIn","Post","q","el","ChannelOptions","PostForm","searchbar","searchbarPlaceholder","channelId","localization","translations","fa","inline","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","parse","responseText","PostCreate","createEmpty","convertToRaw","getCurrentContent","blocks","block","trim","prev","prevstate","post_form","PostUpdate","workflow_form","NotificationList","colorClass","notification","seen","target_type","target_id","NotificationIndex","Notification","ChannelShow","admins","recent_posts","ChannelList","ChannelIndex","Channel","ChannelForm","abstract","ChannelCreate","channel_form","ChannelUpdate","UserOptions","users","email","AssignmentForm","assignment_form","user_id","UserList","removeRole","AccessControlForm","access_control_form","item","abilityTitle","abilityValue","true","false","addAbility","AbilityList","ability","removeAbility","access_control_list","RoleShow","role","assignedUsers","role_id","ability_title","ability_value","RoleList","RoleIndex","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","Default","disabled","RoleCreate","default_role","role_form","ChannelCompactList","ExpertiesList","experties","expert","removeExperties","mediaBgColor","ProfileShow","useMemo","axes","primary","m","style","display","borderRadius","padding","marginRight","backgroundColor","addTag","ProfileList","last_login","ProfileIndex","ProfileForm","profile_info","firstname","surename","new_experties","submitExperties","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","submitFields","handleChangeValueFields","ProfileCreate","pictures","picture","profile_form","LoginForm","sign_up","enter_your_email","password","enter_your_password","animate","you_can_sign_up","user","setItem","username","Login","SignUpForm","autocomplete","password_confirmation","enter_your_password_confirmation","if_registered","you_can_login","path","component","SignUp","MetaUpdate","RoleUpdate","ProfileUpdate","Boolean","hostname","match","use","Framework7React","ReactDOM","render","createElement","f7params","theme","panel","rightBreakpoint","touch","tapHold","routes","left","cover","themeDark","right","reveal","pushState","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9c6740bf.chunk.js","sourcesContent":["export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'بیخیال',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'others': 'دیگران',\n  'related' : 'مرتبط',\n  'mine': 'من',\n  'info':'اطلاعات',\n  'admins': 'مدیران',\n  'recent_posts': 'پست های اخیر',\n  'profile_info':'اطلاعات فردی ',\n  'experties': 'تخصص ها و مهارت ها',\n  'new_experties': 'افزودن تخصص',\n  'notifications' : 'آگاهسازی ها'\n};\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n\n  logout(){\n    this.setState({token: null});\n    window.localStorage.removeItem('token');\n    window.location.reload()\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n            <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n          <BlockTitle> <i className=\"va ml-5 fa fa-users\"></i>{dict.social}</BlockTitle>\n          <List>\n            <ListItem link=\"/posts/\" ignoreCache={true} reloadCurrent={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-pencil\"></i>\n              <span>{dict.posts}</span>\n            </ListItem>\n            \n            <ListItem link=\"/channels/\" ignoreCache={true} reloadCurrent={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-bullhorn\"></i>\n              <span>{dict.channels}</span>\n            </ListItem>\n            \n            <ListItem link=\"/profiles/\" ignoreCache={true} reloadCurrent={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profiles}</span>\n            </ListItem>\n\n            <ListItem link=\"/notifications/\" ignoreCache={true} reloadCurrent={true} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-circle-o-notch\"></i>\n              <span>{dict.notifications}</span>\n            </ListItem>\n\n            </List>\n            <BlockTitle> <i className=\"va ml-5 fa fa-cogs\"></i>{dict.settings}</BlockTitle>\n            <List>\n            <ListItem link=\"/roles/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-shield\"></i>\n              <span>{dict.roles}</span>\n            </ListItem>\n            <ListItem link=\"/metas/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-th\"></i>\n              <span>{dict.metas}</span>\n            </ListItem>\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment> \n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar ><span className='jc-center white'><i className=\"va ml-5 fa fa-umbrella\"></i>{dict.Shoa}</span></Navbar>\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    console.log(list.data)\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\n//const server='http://localhost:3001/v1';\nconst server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token, page=1) {\n  axios.get(server + '/'+ model +'/'+id+'?page='+page, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","import React from \"react\";\n\nconst ActualOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.content){\n    for (let i = 0; i < props.content.length; i++) {\n      options.push(\n        <option value={props.content[i].content[0].fid}>\n          {props.content[i].content[0].value}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default ActualOptions;","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter, ListItem, Row} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ActualOptions from \"../actuals/options\";\n\nconst ActualForm = (props) => {\n    if (props.meta && props.meta.meta_schema) {\n\n        var meta_schema = props.meta.meta_schema\n        var items = []\n        for (let i = 0; i < meta_schema.length; i++) {\n          switch (meta_schema[i].type) {\n            case 'String':\n            items.push(\n              <ListInput\n                label={meta_schema[i].label}\n                type=\"text\"\n                placeholder=\"...\"\n                onInput={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                />)\n            break;\n            case 'Text':\n                items.push(\n                  <ListInput\n                    label={meta_schema[i].name}\n                    type=\"textarea\"\n                    placeholder=\"...\"\n                    onInput={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                    />\n                )\n            break;\n            case 'Table':\n                if (meta_schema[i].content) {\n                  items.push(\n                    <ListItem\n                      title={meta_schema[i].content.title}\n                      smartSelect\n                      smartSelectParams={{pageBackLinkText: dict.back}}\n                      >\n                      <select name=\"content\"\n                        onChange={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                        >\n                        <ActualOptions content={meta_schema[i].content}/>\n                      </select>\n                    </ListItem>\n                  )}\n              break;\n            }\n            }\n              var submit = null\n              if (props.submit) {\n                submit = <CardFooter><Link></Link><Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button></CardFooter>\n              }\n              return(\n                <Card>\n                  <CardHeader>{dict.form} {props.meta.label}</CardHeader>\n                  <List form>\n                    {items}\n                    {submit}\n                  </List>\n                </Card>\n              )\n            }\n            else {\n              return(<div></div>)\n            }\n          }\n  export default ActualForm;\n","import React from \"react\";\nimport { Button, Icon, Card, ListInput, List, BlockTitle} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst ActualList = (props) => {\n  var meta_schema =props.meta.meta_schema\n  if(props.meta && props.actuals){\n  var body = [<BlockTitle>{props.meta.label}</BlockTitle>]\n    var td = []\n    var actuals =  props.actuals\n    for (let i = 0; i < actuals.length; i++) {\n     var content = actuals[i].content\n     var td = []\n      for (let j= 0; j < content.length; j++) {\n        //console.log(content[j])\n          td.push(<ListInput key={crypto.lib.WordArray.random(32)} label={content[j].label} type=\"text\" defaultValue={content[j].value}/>)\n        \n        if( props.editable && content[j] && j == meta_schema.length - 1 && props.meta.id == content[j].metaId){\n          td.push(<Button color='gray' onClick={() => props.removeActual(actuals[i].uuid)}>\n          <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n        </Button>)\n        }\n      }\n      body.push(<Card><List key={crypto.lib.WordArray.random(32)}>{td}</List></Card>)\n    }\n\n    \n\n\n  return(\n    <React.Fragment>\n      {body}\n    </React.Fragment>\n  )\n}\nelse {\n  return(<div></div>)\n}\n}\nexport default ActualList;","import React from \"react\";\nimport { Card, CardHeader, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport JSONPretty from 'react-json-pretty';\n\nconst MetaShow = (props) => {\n  if (props.meta){\n    return(\n      <React.Fragment>\n        <Card>\n        <CardHeader>{dict.title}: {props.meta.title}</CardHeader>\n        <List simple-list>\n          <ListItem className=''>\n          <JSONPretty id=\"json-pretty\" data={JSON.stringify(props.meta.meta_schema)}></JSONPretty></ListItem>\n        </List>\n        </Card>\n        <ActualList meta={props.meta} editable={true} actuals={props.meta.actuals} removeActual={props.removeActual} />\n        <ActualForm meta={props.meta} submit={props.submit} onChangeValue={props.handleChangeValue} />\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default MetaShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaShow from \"../../containers/metas/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.submit = this.submit.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n\n    \n    this.state = {\n      meta: null,\n      metaId: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('metas', this.$f7route.params['metaId']);\n  }\n\n  getInstance() {\n    var meta = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (meta && klass === 'Meta') {\n      this.setState({\n        meta: meta,\n        metaId: meta.id \n      });\n    }\n  }\n\n  handleChangeValue(key, value) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value }) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value }) });\n    }\n  }\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  submit(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.meta) {\n      return (\n        <Fab href={\"/metas/\" + this.state.meta.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { meta } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.metas} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <MetaShow meta={meta} removeActual={this.removeActual} handleChangeValue={this.handleChangeValue} submit={this.submit}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst MetaList = (props) => {\n\n  if (props.metas) {\n    return (\n      <List mediaList>\n        {props.metas.map((meta) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/metas/\" + meta.id}\n            ignoreCache={true}\n            title={meta.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default MetaList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport MetaList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst MetaIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.metas} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/metas/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <MetaList metas={props.metas}/>\n    </Page>\n  )\n}\nexport default MetaIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport MetaIndex from \"../../containers/metas/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      metas: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('metas', this.state.page);\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas  && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n  render() {\n    const {metas} = this.state;\n    return(<MetaIndex metas={metas}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Card, CardFooter, Button, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\n\nconst MetaForm = (props) => {\n  return (\n    <Card>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.meta.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListInput\n          label={dict.label}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.meta.label}\n          onInput={(e) => {\n            props.handleChange({ label: e.target.value })\n          }}\n        />\n        <ListInput\n          label=\"Schema\"\n          type=\"text\"\n          inputStyle={{direction: 'ltr'}}\n          defaultValue={JSON.stringify(props.meta.meta_schema)}\n          placeholder=\"JSON\"\n          onInput={(e) => {\n            props.handleChange({ metaSchema: e.target.value })\n          }}\n        ></ListInput>\n\n\n      </List>\n      <CardFooter>\n        <Link></Link>\n        <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default MetaForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaForm from \"../../containers/metas/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class MetaCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      meta: {},\n      metaSchema: null,\n      title: null,\n      label: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, label: this.state.label,  meta_schema: this.state.metaSchema}\n    MyActions.setInstance('metas', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/metas/');\n  }\n\n\n\n  render() {\n    const {meta} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.meta_form} backLink={dict.back} />\n        <BlockTitle>{dict.meta_form}</BlockTitle>\n        <MetaForm meta={meta} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaForm from \"../../containers/metas/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      meta : {},\n      title: null,\n      metaSchema: null,\n      id: null,\n      label: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, label: this.state.label, meta_schema: this.state.metaSchema}\n    MyActions.updateInstance('metas', data);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['metaId']) {\n      MyActions.getInstance('metas', this.$f7route.params['metaId']);\n    }\n  }\n\n\n  getInstance(){\n    var meta = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    console.log(meta);\n    if (meta && klass === 'Meta'){\n      this.setState({\n        title: meta.title,\n        id: meta.id,\n        meta: meta,\n        metaSchema: meta.metaSchema,\n        label: meta.label\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj);\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/metas/');\n  }\n\n\n  render() {\n        const {meta} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.meta_form} backLink={dict.back} />\n        <BlockTitle>{dict.meta_form}</BlockTitle>\n        <MetaForm meta={meta} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Actions, ActionsLabel, ActionsGroup, ActionsButton, Icon, Button, Sheet, Toolbar, Link, PageContent, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst InteractionMenu = (props) => {\n  if (props.model){\n    return(\n      <React.Fragment>\n\n      <Actions id={\"actions-two-groups-\"+props.model.id}>\n        <ActionsGroup>\n          <ActionsLabel>{dict.social_acts}</ActionsLabel>\n          <ActionsButton onClick={props.model.bookmarked ? '': () => props.interaction('Bookmark', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-bookmark\"></i>{dict.bookmark} ({props.model.bookmarks})</ActionsButton>\n          <ActionsButton onClick={props.model.liked ? '':() => props.interaction('Like', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-heart\"></i>{dict.like} ({props.model.likes})</ActionsButton>\n          <ActionsButton onClick={props.model.followed ? '':() => props.interaction('Follow', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-link\"></i>{dict.follow} ({props.model.follows})</ActionsButton>\n        </ActionsGroup>\n        <ActionsGroup>\n          <ActionsButton color=\"red\">{dict.cancel}</ActionsButton>\n        </ActionsGroup>\n      </Actions>\n      \n      <Button className=\"col\"  href={false} actionsOpen={\"#actions-two-groups-\"+props.model.id}><i className=\"va fa fa-users\"></i></Button>\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default InteractionMenu;\n","import React from \"react\";\nimport { Actions, ActionsLabel, ActionsGroup, ActionsButton, Icon, Button, Sheet, Toolbar, Link, PageContent, Block, ListInput, List , Row} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst ShareMenu = (props) => {\n  if (props.model){\n    if(props.channels){\n      var options = []\n      for (let i = 0; i < props.channels.length; i++) {\n        options.push(\n          <option value={props.channels[i].id} key={crypto.lib.WordArray.random(32)}>\n            {props.channels[i].title}\n          </option>\n        )\n      }\n    }\n    return(\n      <React.Fragment>\n        <Sheet className=\"demo-sheet\" opened={props.sheetOpened} onSheetClosed={() => {props.handleChange({ sheetOpened: false})}}>\n          <Toolbar>\n            <div className=\"left\"></div>\n            <div className=\"right\">\n              <Link sheetClose>{dict.close}</Link>\n            </div>\n          </Toolbar>\n          {/*  Scrollable sheet content */}\n          <PageContent>\n\n              <List>\n                <ListInput\n                  label={dict.channel}\n                  type=\"select\"\n                  defaultValue=\"Male\"\n                  placeholder=\"Please choose...\"\n                  onChange={(e) => {\n                    props.handleChange({ channel_id: e.target.value})}\n                  }\n                >\n                  <Icon icon=\"demo-list-icon\" slot=\"media\"/>\n                  {options}\n                </ListInput>\n</List>\n            <Block strong>\n              <Row tag=\"p\">\n                <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n              </Row>\n            </Block>\n          </PageContent>\n        </Sheet>\n\n        <Button className=\"col\"  href={false} sheetOpen=\".demo-sheet\"><i class=\"va fa fa-retweet\"></i></Button>\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default ShareMenu;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter} from 'framework7-react';\nimport { dict} from '../../Dict';\n\nconst CommentForm = (props) => {\n    return (\n      <Card>\n        <CardHeader>{dict.comment_form}</CardHeader>\n        <List form>\n        <ListInput\n            label={dict.comment}\n            type=\"textarea\"\n            placeholder='...'\n            maxlength='300'\n            resizable\n            clearButton={true}\n            onInput={(e) => {\n              props.handleChange({ commentContent: e.target.value})\n            }}\n            />\n        </List>\n        <CardFooter>\n          <Link></Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  export default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var time = <React.Fragment><Link onClick={() => props.removeComment(props.comments[i].id)}><i className=\"va ml-5 fa fa-trash\"></i></Link><Moment locale=\"fa\" fromNow ago>{props.comments[i].created_at}</Moment>{dict.ago}</React.Fragment>\n            items.push(\n                <ListItem\n                    className='some-link'\n                    text={time}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" />\n                </ListItem>\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport {List, BlockTitle, ListItem, Block, Row, Col, Button } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport InteractionMenu from \"../interactions/menu\"\nimport ShareMenu from \"../shares/menu\"\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst PostShow = (props) => {\n  if (props.post && props.post.draft) {\n    const contentState = convertFromRaw(props.post.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n            <Col width='50' tabletWidth='70'></Col>\n            <Col width=\"25\" tabletWidth='15' className='ml-5'>\n              <Button fill><ShareMenu model={props.post} submit={props.submit} channels={props.channels} klass='Post' sheetOpened={props.sheetOpened} handleChange={props.handleChange} klass='Channel' interaction={props.interaction} /></Button>\n            </Col>\n            <Col width=\"25\" tabletWidth='15'>\n              <Button fill><InteractionMenu model={props.post} klass='Post' interaction={props.interaction} /></Button>\n            </Col>\n          </Row>\n        </Block>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.post.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true} \n          />\n\n        <CommentForm post={props.post} submit={props.submitComment} handleChange={props.handleChange} />\n        <CommentList comments={props.comments} removeComment={props.removeComment} loadMore={props.loadMore}/>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default PostShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostShow from \"../../containers/posts/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n    \n    \n\n    this.state = {\n      post: null,\n      id: null,\n      page: 1,\n      channels: null,\n      channel_id: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.$$('.some-link').on('taphold', function (f7) {\n      f7.dialog.alert('Tap hold fired!');\n    });\n    MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token);\n    MyActions.getList('channels', this.state.page, {} ,this.state.token);\n  }\n\n  getInstance(){\n    var post = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (post && klass === 'Post'){\n      this.setState({\n        post: post,\n        id: post.id,\n        comments: post.comments\n      });\n    }\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels&& klass === 'Channel'){\n      this.setState({\n        channels: channels,\n        channel_id: channels[0].id\n      });\n  }\n}\n\n  setInstance(){\n    var post = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if(post && klass === 'Post'){\n      this.setState({\n        post: post,\n        comments: post.comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab(){\n    if (this.state.post){\n      return(\n        <Fab href={\"/posts/\"+this.state.post.id+\"/edit\"} target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  submit(){\n    var data = {post_id: this.state.id, channel_id: this.state.channel_id}\n    MyActions.setInstance('shares', data, this.state.token);\n    const self = this;\n    self.$f7.sheet.close('.demo-sheet')\n  }\n\n  submitComment(){\n    var data = {post_id: this.state.id, content: this.state.commentContent}\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id){\n    var data = {id: id}\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const {post, sheetOpened, channels, comments} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.posts} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <PostShow post={post} comments={comments} channels={channels} submitComment={this.submitComment} removeComment={this.removeComment} submit={this.submit} interaction={this.interaction} handleChange={this.handleChangeValue} loadMore={this.loadMore}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from \"../../Dict\";\n\nconst PostList = (props) => {\n  if (props.posts && props.posts.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.posts.map((post) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={post.profile.fullname} href={'/profiles/' + post.profile.id}><img src={post.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + post.profile.id}>{post.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/posts/' + post.id}>{post.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    <InteractionMenu model={post} klass='Post' interaction={props.interaction} sourceType={props.sourceType} sourceId={props.sourceId} />\n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {post.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/posts/' + post.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default PostList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport PostList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst PostIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.posts} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/posts/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default PostIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport PostIndex from \"../../containers/posts/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Post extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      posts: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('posts', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ posts: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('posts/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('posts/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('posts', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var post = ModelStore.getIntance()\n    if (post) {\n      this.setState({ posts: this.state.posts.map(el => (el.id === post.id ? Object.assign({}, el, post) : el)) });\n    }\n  }\n\n  getList() {\n    var posts = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (posts.length > 0 && klass === 'Post') {\n      this.setState({\n        posts: this.state.posts.concat(posts),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (<PostIndex interaction={this.interaction} loadMore={this.loadMore} posts={posts} search={this.search} />)\n  }\n}\n","import React from \"react\";\n\nconst ChannelOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.content){\n\n    for (let i = 0; i < props.content.length; i++) {\n      options.push(\n        <option value={props.content[i].id}>\n          {props.content[i].title}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default ChannelOptions;","import React from \"react\";\nimport { List, ListItem, ListInput, Link, CardFooter, Button, Card, CardHeader } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport ChannelOptions from \"../channels/options\";\n\n\nimport fa from '../../js/fa.js';\nconst PostForm = (props) => {\n  if (props.post) {\n    var channels = null;\n    if (props.channels) {\n      channels =\n        <ListItem\n          title={dict.channel}\n          smartSelect\n          smartSelectParams={{ pageBackLinkText: dict.back, searchbar: true, searchbarPlaceholder: dict.search }}\n        >\n          <select name=\"content\"\n            defaultValue={props.channelId}\n            onChange={(e) => {\n              props.handleChange({ channelId: e.target.value })\n            }}>\n            <ChannelOptions content={props.channels} />\n          </select>\n        </ListItem>\n    }\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.post}</CardHeader>\n          <List form>\n            {channels}\n            <ListInput\n              label={dict.title}\n              type=\"text\"\n              placeholder='...'\n              maxlength='50'\n              value={props.post.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link', 'image'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default PostForm;\n","export function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'http://localhost:3001/v1/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostForm from \"../../containers/posts/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class PostCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      post: {},\n      channels: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      channelId: null,\n      interaction: null,\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit(){\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var data = {title: this.state.title, content: value, channel_id: this.state.channelId, draft: convertToRaw(this.state.editorState.getCurrentContent())}\n    MyActions.setInstance('posts', data, this.state.token);\n  }\n\n  onEditorStateChange(editorState){\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('channels', this.state.page, {},this.state.token);\n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels && klass === 'Channel'){\n      this.setState({\n        channels: channels,\n      });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/posts/');\n  }\n\n\n\n\n\n  render() {\n    const {post, editorState, channels} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.post_form} />\n        <PostForm post={post} channels={channels} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostForm from \"../../containers/posts/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class PostUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      post: {title: '', draft: ''},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      id: null,\n      title: null,\n      draft: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, draft:convertToRaw(this.state.editorState.getCurrentContent())}\n    MyActions.updateInstance('posts', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['postId']) {\n      MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var post = ModelStore.getIntance()\n\n    if (post){\n      const contentState = convertFromRaw(post.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        post: post,\n        title: post.title,\n        id: post.id,\n        editorState: editorState\n      });\n    }\n    console.log(post);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/posts/');\n  }\n\n\n  render() {\n    const { post, editorState} = this.state;\n    return (\n      <Page>\n        <Navbar title=\"Form\" backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <PostForm post={post}  editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile){\n      return(<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification){\n      if (!notification.seen){\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <List mediaList>\n        {props.notifications.map((notification) =>\n          <ListItem\n            className={colorClass(notification)}\n            key={crypto.lib.WordArray.random(32)}\n            link={'/' + notification.target_type+ '/'+ notification.target_id}\n            title={notification.content}\n            subtitle={profileLink(notification.profile)}\n          >\n          <img slot=\"media\" src={notification.profile.avatar} width=\"44\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, Link, Card, Block, Row, Col, Button, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InteractionMenu from \"../interactions/menu\"\nimport ShareMenu from \"../shares/menu\"\nimport PostList from \"../posts/list\"\n\nconst ChannelShow = (props) => {\n  if (props.channel) {\n    console.log(props.channel.posts)\n    return (\n      <React.Fragment>\n        <Block>\n          <Row noGap>\n            <Col width='80'></Col>\n\n            <Col width=\"20\">\n              <Button><InteractionMenu model={props.channel} klass='Channel' interaction={props.interaction} sourceType='Channel' sourceId={props.channel.id} /></Button>\n            </Col>\n          </Row>\n        </Block>\n        <Row noGap>\n          <Col width='100' tabletWidth='50'>\n            <Card>\n              <CardHeader className='fs-12'>{props.channel.title}</CardHeader>\n              <CardContent className='lightgray-color fs-12'>{props.channel.content}</CardContent>\n            </Card>\n          </Col>\n          <Col width='100' tabletWidth='50'>\n            <Card>\n              <CardHeader className='fs-12'>{dict.admins}</CardHeader>\n              <CardContent>\n                <Link tooltip={props.channel.profile.fullname} href={'/profiles/' + props.channel.profile.id}><div className=\"demo-facebook-avatar\"><img src={props.channel.profile.avatar} width=\"34\" height=\"34\" /></div></Link>\n              </CardContent>\n            </Card>\n          </Col>\n        </Row>\n\n        <BlockTitle>{dict.recent_posts}</BlockTitle>\n        <PostList posts={props.channel.posts} interaction={props.interaction} sourceType='Channel' sourceId={props.channel.id} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ChannelShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelShow from \"../../containers/channels/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n\n    this.state = {\n      channel: null,\n      sheetOpened: false,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    MyActions.getInstance('channels', this.$f7route.params['channelId'], this.state.token);\n  }\n\n  getInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (channel && klass === 'Channel'){\n      this.setState({\n        channel: channel,\n      });\n    }\n    console.log('channel', channel);\n  }\n\n  setInstance(){\n    var channel = ModelStore.getIntance()\n    if(channel){\n      this.setState({\n        channel: channel,\n      });\n    }\n    console.log(channel);\n  }\n\n\n  fab(){\n    if (this.state.channel){\n      return(\n        <Fab href={\"/channels/\"+this.state.channel.id+\"/edit\"} target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const {channel, sheetOpened} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.channels} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n\n        {this.fab()}\n        <ChannelShow channel={channel} sheetOpened={sheetOpened} interaction={this.interaction} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, BlockTitle, Link, CardFooter, CardContent, Row, Col, Menu, MenuItem, MenuDropdown, Icon, MenuDropdownItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from '../../Dict';\n\nconst ChannelList = (props) => {\n  if (props.channels && props.channels.length > 0) {\n    return (\n      <React.Fragment>\n      <Row noGap>\n        {props.channels.map((channel) =>\n          <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}>\n            <Card className=\"demo-facebook-card\">\n              <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><img src={channel.avatar} width=\"34\" height=\"34\" /></div>\n                <div className=\"demo-facebook-title \"><Link className=\"gray-color\" href={'/channels/' + channel.id}>{channel.title.substring(0, 30)}</Link></div>\n                <div className=\"demo-facebook-date\"><InteractionMenu model={channel} klass='Channel' interaction={props.interaction} sourceType='Channel' sourceId={channel.id} /></div>\n              </CardHeader>\n              <CardContent className='lightgray-color'>\n                  <span className='fs-12'>{channel.content.substring(0, 120) + '...'}</span>\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/channels/' + channel.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n            </Card>\n          </Col>\n        )}\n      </Row>\n      <Row noGap>\n        <Col></Col>\n        <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n        </Col>\n        <Col></Col>\n      </Row>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ChannelList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, Subnavbar, Link, BlockTitle, Fab, Icon, Tabs, Tab, Block, Toolbar} from 'framework7-react';\nimport ChannelList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ChannelIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.channels} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n        <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n        <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n        <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n      </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/channels/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ChannelIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ChannelIndex from \"../../containers/channels/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport {loggedIn} from \"../../components/users/loggedIn.js\"\n\n\nexport default class Channel extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      channels: [],\n      query: null,\n      page: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    console.log('componentDidMount');\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('channels', this.state.page, {} , this.state.token);\n  }\n\n\n\n  setInstance(){\n    var channel = ModelStore.getIntance()\n    if(channel){\n      this.setState({channels: this.state.channels.map(el => (el.id === channel.id ? Object.assign({}, el, channel) : el))});\n    }\n  }\n\n  search(obj) {\n    this.setState({ channels: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('channels/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('channels/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('channels', this.state.page, {}, this.state.token);\n      });\n    }\n\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels.length > 0 && klass === 'Channel') {\n      this.setState({\n        channels: this.state.channels.concat(channels),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const {channels} = this.state;\n    return(<ChannelIndex interaction={this.interaction} search={this.search} loadMore={this.loadMore} channels={channels}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nimport fa from '../../js/fa.js';\nconst ChannelForm = (props) => {\n  if (props.channel) {\n    return (\n      <React.Fragment>\n        <List form>\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            value={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value})\n            }}\n            />\n          <ListInput\n            label={dict.abstract}\n            type=\"textarea\"\n            placeholder='...'\n            value={props.content}\n            resizable\n            onInput={(e) => {\n              props.handleChange({ content: e.target.value})\n            }}\n            />\n        </List>\n        <Block strong className='minus-z'>\n          <Row tag=\"p\">\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )} else {\n      return (null)\n    }\n  }\n  export default ChannelForm;\n","export function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'http://localhost:3001/v1/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelForm from \"../../containers/channels/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class ChannelCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      channel: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      content: null,\n      interaction: null,\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit(){\n    var data = {title: this.state.title, content: this.state.content}\n    MyActions.setInstance('channels', data, this.state.token);\n  }\n\n  onEditorStateChange(editorState){\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n  }\n\n\n  getList() {\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/channels/');\n  }\n\n\n\n\n\n  render() {\n    const {channel, editorState} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.channel_form} backLink={dict.back} />\n        <BlockTitle>{dict.channel_form}</BlockTitle>\n        <ChannelForm channel={channel}  editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelForm from \"../../containers/channels/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class ChannelUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n\n    this.state = {\n      channel: {title: '', draft: ''},\n      token: window.localStorage.getItem('token'),\n      id: null,\n      title: null,\n      content: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, content: this.state.content}\n    MyActions.updateInstance('channels', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['channelId']) {\n      MyActions.getInstance('channels', this.$f7route.params['channelId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (channel && klass === 'Channel'){\n      this.setState({\n        channel: channel,\n        title: channel.title,\n        id: channel.id,\n        content: channel.content\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/channels/');\n  }\n\n\n  render() {\n    const { channel, title, content} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.form} backLink={dict.back} />\n        <BlockTitle>{dict.channel_form}</BlockTitle>\n        <ChannelForm channel={channel} title={title} content={content}  onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.assignment_form}</BlockTitle>\n        <List form inset>\n          <ListItem\n            title={dict.email}\n            smartSelect\n            >\n            <select name=\"content\"\n              onChange={(e) => {  props.handleChange({ user_id: e.target.value}) }}>\n              <UserOptions users={props.users}/>\n            </select>\n          </ListItem>\n        </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n      </React.Fragment>\n    )\n  }\n  export default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Icon, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List form inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                    <Button className=\"col\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      default_role: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, List, ListItem, CardContent, CardHeader} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from '../../Dict';\n\nconst ChannelCompactList = (props) => {\n  if (props.channels && props.channels.length > 0) {\n    console.log(props.channels)\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            {dict.channels}\n          </CardHeader>\n          <CardContent>\n          <List>\n            {props.channels.map((channel) =>\n              <ListItem\n                link={\"/channels/\"+channel.id}\n                title={channel.title.substring(0, 30)}\n              ></ListItem>\n            )}\n          </List>\n          </CardContent>\n        </Card>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ChannelCompactList;\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ExpertiesList = (props) => {\n\n    if (props.experties) {\n        if (props.editable) {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a onClick={() => props.removeExperties(expert)}>\n                            <Chip text={expert} mediaBgColor=\"orange\">\n                                <Icon slot=\"media\" aurora=\"fa:times\"></Icon>\n                            </Chip>\n                        </a>\n                    )}\n                </Row>\n            )\n        } else {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a href={'/experties/'+expert}><Chip text={expert} /></a>\n                    )}\n                </Row>\n            )\n        }\n\n    } else {\n        return (null)\n    }\n}\nexport default ExpertiesList;\n","import React from \"react\";\nimport { Card, Chip, CardContent, CardHeader, Col, Row, Tab, Tabs, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport ChannelCompactList from \"../channels/compactlist\"\nimport ExpertiesList from \"./experties\";\n\nconst ProfileShow = (props) => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  if (props.profile) {\n    return (\n\n      <Tabs>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"50\">\n\n              <Card>\n                <CardHeader>\n                  <img src={props.profile.avatar} width=\"80\"></img>\n                  <div className='profile-card'>{props.profile.fullname}</div>\n                </CardHeader>\n                <CardContent>\n                  <ExpertiesList experties={props.profile.experties} />\n                </CardContent>\n              </Card>\n              <ChannelCompactList channels={props.channels} />\n            </Col>\n\n            <Col width=\"100\" tabletWidth=\"50\">\n              {props.metas.map((m) =>\n                <React.Fragment>\n                  <ActualList meta={m.meta} editable={false} actuals={m.actuals} removeActual={props.removeActual} />\n                </React.Fragment>\n              )}\n            </Col>\n          </Row>\n\n        </Tab>\n        <Tab id=\"tab-2\" className=\"page-content\">\n          <Row noGap>\n            <Col width=\"100\" tabletWidth=\"50\">\n              <Card>\n                <CardHeader>Chart</CardHeader>\n                <CardContent className='ta-center'>\n                  <div\n                    style={{\n                      display: 'inline-block',\n                      borderRadius: '5px',\n                      padding: '10px',\n                      marginRight: '10px',\n                      backgroundColor: 'white',\n                      width: '250px',\n                      height: '200px'\n                    }}\n                  >\n                    <Chart data={data} axes={axes} />\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\">\n          <div className=\"block-title\">Only Tablet Side By Side</div>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"100\">\n              <div className=\"timeline timeline-sides\">\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs>\n\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.addTag = this.addTag.bind(this);\n    \n    this.state = {\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n        actuals: profile.actuals,\n        metas: profile.metas,\n        channels: profile.channels,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  addTag(){\n    console.log('hey');\n  }\n\n  render() {\n    const { profile, actuals, metas, channels } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLink={dict.back} />\n        <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-user-circle\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-bar-chart\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-list\"></i></Link>\n        </Toolbar>\n        {this.fab()}\n        <ProfileShow profile={profile} actuals={actuals} channels={channels} metas={metas} addTag={this.addTag}/>\n\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Gauge } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    console.log(props.profiles)\n    return (\n      <Row noGap>\n        {props.profiles.map((profile) =>\n          <Col width=\"100\" tabletWidth=\"33\">\n            <Card className=\"demo-facebook-card\">\n              <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><img src={profile.avatar} width=\"34\" height=\"34\" /></div>\n                <div className=\"demo-facebook-name \"><Link className=\"gray-color\" href={'/profiles/' + profile.id}>{profile.fullname.substring(0, 30)}</Link></div>\n        <div className=\"demo-facebook-sub\">\n          <Moment locale=\"fa\" fromNow ago>{profile.last_login}</Moment> {dict.ago}\n          </div>\n              </CardHeader>\n              <CardFooter className='profile-footer'>\n              <ExpertiesList experties={profile.experties} />\n              </CardFooter>\n            </Card>\n          </Col>\n        )}\n      </Row>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    \n    this.state = {\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('profiles', this.state.page);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  console.log(props)\n  if (props.name && props.metas) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List form>\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n        <Card>\n          <CardHeader>{dict.experties}</CardHeader>\n          <CardContent>\n            <List>\n              <ListItem>\n                <ExpertiesList experties={props.experties} editable={true} removeExperties={props.removeExperties}/>\n              </ListItem>\n            </List>\n\n            <List form>\n              <ListInput\n                label={dict.new_experties}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.expert}\n                onInput={(e) => {\n                  props.handleChange({ expert: e.target.value })\n                }}\n              />\n\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submitExperties}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"80\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n        {props.metas.map((m) =>\n          <React.Fragment>\n            <ActualList meta={m.meta} editable={true} actuals={m.actuals} removeActual={props.removeActual} />\n            <ActualForm meta={m.meta} submit={props.submitFields} onChangeValue={props.handleChangeValueFields} />\n          </React.Fragment>\n        )}\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    this.submitExperties = this.submitExperties.bind(this);\n    this.removeExperties = this.removeExperties.bind(this);\n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      metas: null,\n      metaId: null,\n      actuals: null,\n      experties: null,\n      expert: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  submitExperties(){\n    var data = {id: this.state.id, experties: this.state.expert}\n    MyActions.setInstance('profiles/add_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n  removeExperties(experties){\n    var data = {id: this.state.id, experties: experties}\n    MyActions.setInstance('profiles/remove_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        metas: profile.metas,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n        experties: profile.experties\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {name, surename, avatar,metas, actuals, experties} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} experties={experties} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue} submitExperties={this.submitExperties} removeExperties={this.removeExperties}/>\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent>\n          <List form>\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    if (user){\n      window.localStorage.setItem('token', user.token);\n    }\n    const self = this;\n    this.$f7router.navigate('/');\n    window.location.reload()\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>Ï\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List form>\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.username}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ username: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\" animate={false} ignoreCache={true}>{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\nimport MetaShow from './components/metas/show';\nimport MetaIndex from './components/metas/index';\nimport MetaCreate from './components/metas/create';\nimport MetaUpdate from './components/metas/update';\n\n\nimport PostShow from './components/posts/show';\nimport PostIndex from './components/posts/index';\nimport PostCreate from './components/posts/create';\nimport PostUpdate from './components/posts/update';\n\nimport NotificationIndex from './components/notifications/index';\n\nimport ChannelShow from './components/channels/show';\nimport ChannelIndex from './components/channels/index';\nimport ChannelCreate from './components/channels/create';\nimport ChannelUpdate from './components/channels/update';\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\n\nimport Login from './components/users/Login';\nimport SignUp from './components/users/SignUp';\n\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n  {\n    path: '/metas/',\n    component: MetaIndex,\n  },\n  {\n    path: '/metas/:metaId/edit',\n    component: MetaUpdate,\n  },\n  {\n    path: '/metas/new',\n    component: MetaCreate,\n  },\n  {\n    path: '/metas/:metaId',\n    component: MetaShow,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n  {\n    path: '/posts/',\n    component: PostIndex,\n  },\n  {\n    path: '/posts/:postId/edit',\n    component: PostUpdate,\n  },\n  {\n    path: '/posts/new',\n    component: PostCreate,\n  },\n  {\n    path: '/posts/:postId',\n    component: PostShow,\n  },\n\n  {\n    path: '/channels/',\n    component: ChannelIndex,\n  },\n  {\n    path: '/channels/:channelId/edit',\n    component: ChannelUpdate,\n  },\n  {\n    path: '/channels/new',\n    component: ChannelCreate,\n  },\n  {\n    path: '/channels/:channelId',\n    component: ChannelShow,\n  },\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n    <Toolbar bottom>\n      <Link>Left Link</Link>\n      <Link>Right Link</Link>\n    </Toolbar>\n    <Block strong>\n      <p></p>\n    </Block>\n    <BlockTitle></BlockTitle>\n    <List>\n\n    </List>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <List>\n    </List>\n    <Fab href=\"/document_form/\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"orange\">\n      <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n      <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n    </Fab>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n\n      password_confirmation: ''\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password, password_confirmation: this.state.password_confirmation}\n    MyActions.setInstance('users/sign_up', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    if (user){\n      window.localStorage.setItem('token', user.token);\n    }\n    const self = this;\n    this.$f7router.navigate('/');\n    window.location.reload()\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter\n} from 'framework7-react';\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'io.framework7.testapp', // App bundle ID\n    name: 'Framework7', // App name\n    theme: 'aurora', // Automatic theme detection\n    panel: {\n      rightBreakpoint: 960,\n    },\n    touch: {\n      tapHold: true //enable tap hold events\n    },\n    view: {\n      //ignoreCache: true,\n      //reloadCurrent: true\n    },\n    // App routes\n    routes,\n  };\n\n  return (\n    <App params={f7params}>\n      {/* Statusbar */}\n      <Statusbar />\n\n      {/* Left Panel */}\n      <Panel left cover  themeDark>\n        <View url=\"/panel-left/\" />\n      </Panel>\n\n      {/* Right Panel */}\n      <Panel right reveal themeDark>\n        <View url=\"/panel-right/\"/>\n      </Panel>\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/\" pushState={true}  main className=\"safe-areas\"/>\n\n    </App>\n  );\n};\n","module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n"],"sourceRoot":""}