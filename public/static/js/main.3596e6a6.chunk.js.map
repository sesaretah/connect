{"version":3,"sources":["Dict.jsx","containers/layouts/PanelRightPage.jsx","dispatcher.js","stores/ModelStore.js","actions/MyActions.js","conf.jsx","containers/actuals/options.jsx","containers/actuals/form.jsx","containers/actuals/list.jsx","containers/metas/show.jsx","components/metas/show.jsx","containers/metas/list.jsx","containers/metas/index.jsx","components/metas/index.jsx","containers/metas/form.jsx","components/metas/create.jsx","components/metas/update.jsx","containers/interactions/menu.jsx","containers/shares/menu.jsx","containers/comments/form.jsx","containers/comments/list.jsx","containers/posts/show.jsx","components/posts/show.jsx","containers/posts/list.jsx","containers/posts/index.jsx","components/users/loggedIn.js","components/posts/index.jsx","containers/channels/options.jsx","containers/posts/form.jsx","components/posts/uploader.js","components/posts/create.jsx","components/posts/update.jsx","containers/notifications/list.jsx","containers/notifications/index.jsx","components/notifications/index.jsx","containers/channels/show.jsx","components/channels/show.jsx","containers/channels/list.jsx","containers/channels/index.jsx","components/channels/index.jsx","containers/channels/form.jsx","components/channels/uploader.js","components/channels/create.jsx","components/channels/update.jsx","containers/users/options.jsx","containers/assignments/form.jsx","containers/assignments/list.jsx","containers/access_controls/form.jsx","containers/access_controls/list.jsx","containers/roles/show.jsx","components/roles/show.jsx","containers/roles/list.jsx","containers/roles/index.jsx","components/roles/index.jsx","containers/roles/form.jsx","components/roles/create.jsx","components/roles/update.jsx","containers/settings/show.jsx","components/settings/show.jsx","containers/settings/list.jsx","containers/settings/index.jsx","components/settings/index.jsx","containers/settings/form.jsx","components/settings/create.jsx","components/settings/update.jsx","containers/channels/compactlist.jsx","containers/profiles/experties.jsx","containers/profiles/simpleList.jsx","containers/profiles/followers.jsx","containers/profiles/followees.jsx","containers/profiles/show.jsx","components/profiles/show.jsx","containers/profiles/list.jsx","containers/profiles/index.jsx","components/profiles/index.jsx","containers/profiles/form.jsx","components/profiles/create.jsx","components/profiles/update.jsx","containers/friendships/index.jsx","components/friendships/index.jsx","containers/privacy/index.jsx","components/privacy/index.jsx","containers/users/Login.jsx","components/users/Login.jsx","components/users/LoginJwt.jsx","containers/users/SignUp.jsx","components/users/SignUp.jsx","containers/users/Verification.jsx","routes.js","containers/layouts/HomePage.jsx","components/users/Verification.jsx","containers/layouts/NotFoundPage.jsx","serviceWorker.js","index.js","components/App.jsx","js/fa.js"],"names":["dict","PanelRightPage","logout","bind","state","token","window","localStorage","getItem","this","setState","removeItem","location","reload","Fragment","user_settings","view","panelClose","onClick","className","social","link","ignoreCache","reloadCurrent","posts","channels","profiles","notifications","settings","global_settings","roles","metas","privacy_settings","title","login","Shoa","logged_in","Component","Dispatcher","modelStore","list","instance","klass","i","len","data","length","push","emit","console","log","action","type","listModel","showIntance","deleteIntance","setIntance","postFile","EventEmitter","dispatcher","register","handleActions","server","getList","model","page","params","queryString","Object","keys","map","key","join","axios","get","headers","then","response","dispatch","catch","error","fileUpload","id","file","url","formData","FormData","append","config","put","getInstance","removeInstance","setInstance","post","updateInstance","ActualOptions","props","options","value","content","fid","ActualForm","meta","meta_schema","items","label","placeholder","onInput","e","onChangeValue","target","name","smartSelect","smartSelectParams","pageBackLinkText","back","onChange","submit","fill","form","ActualList","actuals","body","td","j","crypto","lib","WordArray","random","defaultValue","editable","metaId","color","removeActual","uuid","ios","aurora","md","MetaShow","simple-list","JSON","stringify","handleChangeValue","Layout","fields","ModelStore","on","removeListener","MyActions","$f7route","getIntance","getKlass","newState","assign","concat","meta_id","href","position","slot","backLink","fab","MetaList","mediaList","after","subtitle","text","MetaIndex","loadData","Framework7","toast","show","receiving","closeTimeout","React","MetaForm","handleChange","inputStyle","direction","metaSchema","MetaCreate","obj","$f7router","navigate","meta_form","editing","DocumentUpdate","InteractionMenu","social_acts","interaction","sourceType","sourceId","bookmark","bookmarks","like","likes","followed","follow","follows","cancel","actionsOpen","ShareMenu","opened","sheetOpened","onSheetClosed","sheetClose","close","channel","selectedChannel","strong","tag","sheetOpen","class","CommentForm","comment_form","comment","maxlength","resizable","clearButton","commentContent","CommentList","comments","time","removeComment","locale","fromNow","ago","created_at","src","profile","avatar","width","inset","noGap","loadMore","more","PostShow","draft","contentState","convertFromRaw","editorState","EditorState","createWithContent","tabletWidth","toolbar","readOnly","submitComment","channelId","$$","f7","dialog","alert","interaction_type","interactionable_id","interactionable_type","source_type","source_id","post_id","channel_id","$f7","sheet","PostList","tooltip","fullname","height","substring","PostIndex","pageContent","panelOpen","inner","disableButtonText","search","query","tabbar","bottom","tabLink","tabLinkActive","swipeable","tabActive","loggedIn","Post","q","el","ChannelOptions","PostForm","searchbar","searchbarPlaceholder","new_post","localization","translations","fa","inline","image","uploadCallback","uploadImageCallBack","previewImage","onEditorStateChange","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","parse","responseText","PostCreate","createEmpty","convertToRaw","getCurrentContent","blocks","block","trim","incomplete_data","prev","prevstate","post_form","PostUpdate","workflow_form","NotificationList","colorClass","notification","seen","target_type","target_id","NotificationIndex","Notification","ChannelShow","admins","recent_posts","ChannelList","ChannelIndex","Channel","ChannelForm","abstract","ChannelCreate","channel_form","ChannelUpdate","UserOptions","users","email","AssignmentForm","assignment_form","user_id","UserList","removeRole","AccessControlForm","access_control_form","item","abilityTitle","abilityValue","true","false","addAbility","AbilityList","ability","removeAbility","access_control_list","RoleShow","role","assignedUsers","role_id","ability_title","ability_value","RoleList","RoleIndex","RoleForm","defaultRole","isDefaultRole","radio","checked","NonDefault","Default","disabled","RoleCreate","default_role","role_form","SettingShow","setting","removeSetting","setting_id","SettingList","SettingIndex","SettingForm","SettingCreate","setting_form","ChannelCompactList","ExpertiesList","experties","expert","removeExperties","mediaBgColor","SimpleList","Followers","followers","followees","ProfileShow","useMemo","primary","m","addTag","backLinkForce","ProfileList","last_login","ProfileIndex","ProfileForm","profile_info","firstname","surename","new_experties","submitExperties","withIcon","buttonText","choose_image","onDrop","buttonClassName","imgExtension","maxFileSize","submitFields","handleChangeValueFields","ProfileCreate","pictures","picture","profile_form","FriendshipIndex","friendship","Friendship","PrivacyIndex","profilePrivacy","findSetting","setting_schemas","schema","op","result","selected","privacySettings","completed_successfully","message","privacy","LoginForm","sign_up","autofocus","enter_your_email","animate","you_can_sign_up","cas","password","username","Login","user","setItem","SignUpForm","enter_your_name","enter_your_surename","validate","if_registered","you_can_login","hide","submitting","SignUp","verification","verification_code","enter_verification_code","verificationCode","path","component","Verification","LoginJwt","MetaUpdate","RoleUpdate","ProfileUpdate","SettingUpdate","Boolean","hostname","match","use","Framework7React","ReactDOM","render","createElement","f7params","theme","panel","rightBreakpoint","touch","tapHold","routes","left","cover","themeDark","right","reveal","pushState","main","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3596e6a6.chunk.js","sourcesContent":["export const dict = {\n  'home' : 'خانه',\n  'name' : 'نام و نام خانوادگی ',\n  'login' : 'ورود',\n  'username' :  'نام کاربری ',\n  'password' : 'رمز عبور ',\n  'password_confirmation': 'تکرار رمز عبور',\n  'mobile' : 'شماره موبایل ',\n  'error': 'خطا',\n  'sign_in' : 'ورود ',\n  'sign_up' : 'ثبت نام',\n  'back' : 'بازگشت',\n  'signed_up_already': 'تا کنون ثبت نام نکرده اید؟',\n  'new_advert': 'درج آگهی ',\n  'title': 'عنوان',\n  'abstract': 'چکیده',\n  'content': 'متن',\n  'submit': 'ثبت ',\n  'upload_from_gallery': 'انتخاب از گالری',\n  'welcome': 'خوش آمدید',\n  'sign_out': 'خروج',\n  'phone_number': 'شماره تلفن',\n  'telegram_channel': 'کانال تلگرام',\n  'instagram_page': 'صفحه اینستاگرام',\n  'address': 'آدرس ',\n  'email': 'ایمیل ',\n  'contact_information':'اطلاعات تماس ',\n  'search': 'جستجو ',\n  'cancel' : 'بیخیال',\n  'view': 'نمایش',\n  'edit': 'ویرایش',\n  'delete': 'حذف',\n  'adverts_nes': 'عنوان، متن و شماره تلفن اجباری است',\n  'my_pins': ' نشان شده‌ها ',\n  'pin' : 'نشان کن',\n  'pinned': 'نشان شده',\n  'message_to_seller': 'ارسال پیام',\n  'messages': 'پیام ها ',\n  'send_message': 'پیام خود را بنویسید',\n  'province': 'استان',\n  'city': 'شهر',\n  'website': 'وبسایت',\n  'call': 'تماس بگیرید',\n  'ago': ' قبل',\n  'all_above': 'همه ی موارد فوق',\n  'no_result': 'موردی یافت نشد ',\n  'category': 'دسته بندی ',\n  'leg':'مسیر',\n  'date':'تاریخ',\n  'time': 'زمان',\n  'numberOfPassngers': 'تعداد مسافران ',\n  'surename': 'نام خانوادگی',\n  'fathername':'نام پدر',\n  'ssn':'کدملی',\n  'birthplace':'محل تولد',\n  'pass_no': 'شماره گذرنامه',\n  'birthdate': 'تاریخ تولد',\n  'place_of_birth': 'محل تولد',\n  'required_fields': 'فیلدهای اجباری',\n  'en_father_name': 'نام پدر لاتین',\n  'en_name': 'نام لاتین',\n  'en_surename': 'نام خانوادگی لاتین ',\n  'passport_no': 'شماره گذرنامه',\n  'final_confirm' : 'تایید نهایی ',\n  'document_form': 'فرم اسناد ',\n  'save': 'ذخیره',\n  'documents':'اسناد ',\n  'type' : 'نوع',\n  'string': 'متن کوتاه',\n  'text': 'متن بلند',\n  'select': 'گزینه',\n  'multiSelect': 'چند گزینه',\n  'table': 'جدول',\n  'date':'تاریخ',\n  'refundable': 'قابل اعاده',\n  'yes':'بله',\n  'no':'خیر',\n  'commentable':'قابل نظردهی',\n  'end_point':'نقطه پایان',\n  'start_point':'نقطه شروع',\n  'votable':'رای گیری',\n  'publishable':'قابل انتشار',\n  'field_name': 'نام فیلد',\n  'add': 'افزودن ',\n  'remove': 'حذف',\n  'auxiliary_tables': 'جداول کمکی',\n  'create_by':'ایجاد شده توسط',\n  'list': 'لیست',\n  'workflows': 'گردش کارها',\n  'auxiliary_records': 'مقادیر کمکی',\n  'basic_table': 'جدول پایه',\n  'relation_table': 'جدول رابطه',\n  'auxiliary_table_form': 'فرم جدول کمکی ' ,\n  'Basic': 'پایه',\n  'Relation': 'رابطه ',\n  'Divan': 'دیوان',\n  'workflow_form':'فرم گردش کار',\n  'submitting':'در حال ارسال ... ',\n  'settings':'تنظیمات',\n  'receiving':'در حال دریافت ...',\n  'workflow_tables': 'جداول کمکی گردش کار ',\n  'auxiliary_table': 'جدول کمکی',\n  'workflow':'گردش کار',\n  'actions' : 'عملیات',\n  'roles': 'نقش ها',\n  'divan': 'دیوان',\n  'enter_your_email': 'ایمیل خود را وارد کنید',\n  'enter_your_password': 'رمز عبور را وارد کنید ',\n  'enter_your_password_confirmation': 'رمز عبور را تکرار کنید ',\n  'profiles': 'افراد ',\n  'firstname': 'نام',\n  'if_registered': 'اگر قبلا ثبت نام کرده اید',\n  'you_can_login':'وارد شوید ',\n  'if_not_registered': 'اگر ثبت نام نکرده اید',\n  'you_can_sign_up':'ثبت نام کنید',\n  'new_assignment': 'اعطای نقش جدید',\n  'posts': 'پست ها',\n  'bookmark': 'نشان',\n  'like':'علاقه',\n  'follow':'دنبال',\n  'share':'اشتراک',\n  'social_acts':'عملگرهای اجتماعی ',\n  'channels': 'کانال ها',\n  'close': 'بستن',\n  'channel':'کانال ',\n  'details': 'شرح',\n  'Shoa': 'شعاع ',\n  'role': 'نقش',\n  'Default': 'پیش فرض',\n  'NonDefault':'غیر پیش فرض ',\n  'value': ' مقدار',\n  'true': 'مثبت',\n  'false': 'منفی',\n  'access_control_list':'لیست کنترل دسترسی',\n  'access_control_form':'فرم کنترل دسترسی',\n  'assignment_form':'فرم اعطای نقش',\n  'comment_form': 'نظر بدهید',\n  'post_form': 'فرم پست',\n  'metas':'پیش جداول',\n  'shoa': 'شعاع',\n  'form' : 'ورود اطلاعات',\n  'choose_image': 'انتخاب عکس',\n  'logout': 'خروج',\n  'more': 'بیشتر ...',\n  'social': 'اجتماعی',\n  'others': 'دیگران',\n  'related' : 'مرتبط',\n  'mine': 'من',\n  'info':'اطلاعات',\n  'admins': 'مدیران',\n  'recent_posts': 'پست های اخیر',\n  'profile_info':'اطلاعات فردی ',\n  'experties': 'تخصص ها و مهارت ها',\n  'new_experties': 'افزودن تخصص',\n  'notifications' : 'آگاهسازی ها',\n  'enter_your_name':'نام خود را وارد کنید',\n  'enter_your_surename':'نام خانوادگی خود را وارد کنید',\n  'incomplete_data':'اطلاعات ناقص',\n  'alert':'هشدار',\n  'followers': 'دنبال کنندگان',\n  'followees':'دنبال شوندگان',\n  'verification': 'احراز هویت',\n  'verification_code':  'کد احراز',\n  'enter_verification_code':  'کد احراز را وارد کنید',\n  'faculty': 'دانشکده',\n  'enter_your_faculty': 'نام دانشکده خود را وارد کنید',\n  'new_post' : 'پست جدید',\n  'full_list': 'لیست کامل',\n  'privacy_settings': 'حریم خصوصی',\n  'global_settings' : 'تنظیمات عمومی',\n  'message': 'پیام',\n  'completed_successfully': 'با موفقیت انجام شد',\n  'cas': 'احراز هویت مرکزی'\n};\n","import React, { Component } from 'react';\nimport { Menu, MenuItem, MenuDropdown, MenuDropdownItem, Page, Navbar, Block, BlockTitle, List, ListItem, FabButton, FabButtons, Fab, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nexport default class PanelRightPage extends Component {\n  constructor() {\n    super();\n    this.logout = this.logout.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n    }\n  }\n\n  logout(){\n    this.setState({token: null});\n    window.localStorage.removeItem('token');\n    window.location.reload()\n  }\n\n  logged_in(token) {\n    if (token) {\n      return (\n        <React.Fragment>\n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem view=\"#main-view\" panelClose onClick={this.logout}>\n            <i className=\"va ml-5 fa fa-power-off\"></i>\n              <span>{dict.logout}</span>\n            </ListItem>\n          </List>\n          <BlockTitle> <i className=\"va ml-5 fa fa-users\"></i>{dict.social}</BlockTitle>\n          <List>\n            <ListItem link=\"/posts/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-pencil\"></i>\n              <span>{dict.posts}</span>\n            </ListItem>\n            \n            <ListItem link=\"/channels/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-bullhorn\"></i>\n              <span>{dict.channels}</span>\n            </ListItem>\n            \n            <ListItem link=\"/profiles/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-user-circle-o\"></i>\n              <span>{dict.profiles}</span>\n            </ListItem>\n\n            <ListItem link=\"/notifications/\" ignoreCache={false} reloadCurrent={false} view=\"#main-view\" panelClose>\n              <i className=\"va ml-5 fa fa-circle-o-notch\"></i>\n              <span>{dict.notifications}</span>\n            </ListItem>\n\n            </List>\n            <BlockTitle> <i className=\"va ml-5 fa fa-cogs\"></i>{dict.settings}</BlockTitle>\n            <List>\n            <ListItem link=\"/settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-cog\"></i>\n              <span>{dict.global_settings}</span>\n            </ListItem>\n            <ListItem link=\"/roles/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-shield\"></i>\n              <span>{dict.roles}</span>\n            </ListItem>\n            <ListItem link=\"/metas/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-th\"></i>\n              <span>{dict.metas}</span>\n            </ListItem>\n            <ListItem link=\"/privacy_settings/\" ignoreCache={true} view=\"#main-view\" panelClose>\n            <i className=\"va ml-5 fa fa-vcard\"></i>\n              <span>{dict.privacy_settings}</span>\n            </ListItem>\n          </List>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment> \n          <BlockTitle>{dict.user_settings}</BlockTitle>\n          <List>\n            <ListItem link=\"/login/\" title={dict.login} view=\"#main-view\" panelClose></ListItem>\n          </List>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    const { token } = this.state;\n    return (\n      <Page >\n        <Navbar ><span className='jc-center white'><i className=\"va ml-5 fa fa-umbrella\"></i>{dict.Shoa}</span></Navbar>\n        {this.logged_in(token)}\n      </Page>\n    );\n  }\n}","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher;\n","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass ModelStore extends EventEmitter {\n  constructor() {\n    super()\n    this.list = [];\n    this.instance = null;\n    this.klass= null;\n  }\n\n  listModel(list){\n    this.list = [];\n    this.klass = list.klass\n    for (var i = 0, len = list.data.length; i < len; ++i) {\n      this.list.push(list.data[i]);\n      if (i === len - 1 ) {\n        this.emit(\"got_list\");\n      }\n    }\n    if(list.data.length == 0){\n      this.emit(\"got_list\");\n    }\n\n  }\n\n  showIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"got_instance\");\n  }\n\n  setIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"set_instance\");\n  }\n\n\n  deleteIntance(instance){\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"deleted_instance\");\n  }\n\n  postFile(instance){\n    console.log(instance)\n    this.klass = instance.klass\n    this.instance = instance.data\n    this.emit(\"file_posted\");\n  }\n\n  getIntance() {\n    return this.instance\n  }\n\n  getList(){\n    return this.list\n  }\n\n  getListnKlass(){\n    return [this.list, this.klass]\n  }\n\n  getKlass(){\n    return this.klass\n  }\n\n  handleActions(action) {\n    switch(action.type) {\n      case \"LIST_MODEL_SUCCESS\": {\n        this.listModel(action.list);\n        break;\n      }\n      case \"GET_INSTANCE_SUCCESS\": {\n        this.showIntance(action.instance);\n        break;\n      }\n      case \"DELETE_INSTANCE_SUCCESS\": {\n        this.deleteIntance(action.instance);\n        break;\n      }\n      case \"SET_INSTANCE_SUCCESS\": {\n        this.setIntance(action.instance);\n        break;\n      }\n      case \"POST_FILE_SUCCESS\": {\n        this.postFile(action.instance);\n        break;\n      }\n\n      \n    }\n  }\n}\n\n\nconst modelStore = new ModelStore;\ndispatcher.register(modelStore.handleActions.bind(modelStore));\n\nexport default modelStore;\n","import dispatcher from \"../dispatcher\";\nimport axios, {put} from 'axios';\nimport { conf } from '../conf';\nconst server= conf.server;\n//const server='/v1';\n//const server='http://95.156.255.115/api';\n\n\nexport function getList(model, page=1, params={}, token) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'?page='+page+'&'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"LIST_MODEL_SUCCESS\",\n      list: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function fileUpload(model, id , file, token){\n  const url = server + '/'+ model +'/'+id;\n  const formData = new FormData();\n  formData.append('profile[avatar]',file)\n  formData.append('profile[id]',id)\n  const config = {\n      headers: {\n          'content-type': 'multipart/form-data',\n          'Authorization': \"bearer \" + token \n      }\n  }\n  put(url, formData,config).then(function (response) {\n    dispatcher.dispatch({\n      type: \"POST_FILE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function getInstance(model, id, token, page=1) {\n  axios.get(server + '/'+ model +'/'+id+'?page='+page, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"GET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function removeInstance(model, params={}, token ) {\n  var queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n  axios.get(server + '/'+ model +'/delete?'+queryString, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"DELETE_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function setInstance(model, data, token) {\n  axios.post(server + '/'+ model +'/', data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n\nexport function updateInstance(model, data, token) {\n  axios.put(server + '/'+ model +'/'+data.id, data, { headers: {'Content-Type': 'application/json', 'Authorization': \"bearer \" + token } })\n  .then(function (response) {\n    dispatcher.dispatch({\n      type: \"SET_INSTANCE_SUCCESS\",\n      instance: response.data,\n    });\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n}\n","export const conf = { \n'server' : '/v1'\n};","import React from \"react\";\n\nconst ActualOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.content){\n    for (let i = 0; i < props.content.length; i++) {\n      options.push(\n        <option value={props.content[i].content[0].fid}>\n          {props.content[i].content[0].value}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default ActualOptions;","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter, ListItem, Row} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ActualOptions from \"../actuals/options\";\n\nconst ActualForm = (props) => {\n    if (props.meta && props.meta.meta_schema) {\n\n        var meta_schema = props.meta.meta_schema\n        var items = []\n        for (let i = 0; i < meta_schema.length; i++) {\n          switch (meta_schema[i].type) {\n            case 'String':\n            items.push(\n              <ListInput\n                label={meta_schema[i].label}\n                type=\"text\"\n                placeholder=\"...\"\n                onInput={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                />)\n            break;\n            case 'Text':\n                items.push(\n                  <ListInput\n                    label={meta_schema[i].name}\n                    type=\"textarea\"\n                    placeholder=\"...\"\n                    onInput={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                    />\n                )\n            break;\n            case 'Table':\n                if (meta_schema[i].content) {\n                  items.push(\n                    <ListItem\n                      title={meta_schema[i].content.title}\n                      smartSelect\n                      smartSelectParams={{pageBackLinkText: dict.back}}\n                      >\n                      <select name=\"content\"\n                        onChange={(e) => props.onChangeValue(meta_schema[i].fid, e.target.value, props.meta.id)}\n                        >\n                        <ActualOptions content={meta_schema[i].content}/>\n                      </select>\n                    </ListItem>\n                  )}\n              break;\n            }\n            }\n              var submit = null\n              if (props.submit) {\n                submit = <CardFooter><Link></Link><Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button></CardFooter>\n              }\n              return(\n                <Card>\n                  <CardHeader>{dict.form} {props.meta.label}</CardHeader>\n                  <List form>\n                    {items}\n                    {submit}\n                  </List>\n                </Card>\n              )\n            }\n            else {\n              return(<div></div>)\n            }\n          }\n  export default ActualForm;\n","import React from \"react\";\nimport { Button, Icon, Card, ListInput, List, BlockTitle} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst ActualList = (props) => {\n  var meta_schema =props.meta.meta_schema\n  if(props.meta && props.actuals){\n  var body = [<BlockTitle>{props.meta.label}</BlockTitle>]\n    var td = []\n    var actuals =  props.actuals\n    for (let i = 0; i < actuals.length; i++) {\n     var content = actuals[i].content\n     var td = []\n      for (let j= 0; j < content.length; j++) {\n        //console.log(content[j])\n          td.push(<ListInput key={crypto.lib.WordArray.random(32)} label={content[j].label} type=\"text\" defaultValue={content[j].value}/>)\n        \n        if( props.editable && content[j] && j == meta_schema.length - 1 && props.meta.id == content[j].metaId){\n          td.push(<Button color='gray' onClick={() => props.removeActual(actuals[i].uuid)}>\n          <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n        </Button>)\n        }\n      }\n      body.push(<Card><List key={crypto.lib.WordArray.random(32)}>{td}</List></Card>)\n    }\n\n    \n\n\n  return(\n    <React.Fragment>\n      {body}\n    </React.Fragment>\n  )\n}\nelse {\n  return(<div></div>)\n}\n}\nexport default ActualList;","import React from \"react\";\nimport { Card, CardHeader, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport JSONPretty from 'react-json-pretty';\n\nconst MetaShow = (props) => {\n  if (props.meta){\n    return(\n      <React.Fragment>\n        <Card>\n        <CardHeader>{dict.title}: {props.meta.title}</CardHeader>\n        <List simple-list>\n          <ListItem className=''>\n          <JSONPretty id=\"json-pretty\" data={JSON.stringify(props.meta.meta_schema)}></JSONPretty></ListItem>\n        </List>\n        </Card>\n        <ActualList meta={props.meta} editable={true} actuals={props.meta.actuals} removeActual={props.removeActual} />\n        <ActualForm meta={props.meta} submit={props.submit} onChangeValue={props.handleChangeValue} />\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default MetaShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaShow from \"../../containers/metas/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.submit = this.submit.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n\n    \n    this.state = {\n      meta: null,\n      metaId: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('metas', this.$f7route.params['metaId']);\n  }\n\n  getInstance() {\n    var meta = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (meta && klass === 'Meta') {\n      this.setState({\n        meta: meta,\n        metaId: meta.id \n      });\n    }\n  }\n\n  handleChangeValue(key, value) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value }) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value }) });\n    }\n  }\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  submit(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  fab() {\n    if (this.state.meta) {\n      return (\n        <Fab href={\"/metas/\" + this.state.meta.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  render() {\n    const { meta } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.metas} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <MetaShow meta={meta} removeActual={this.removeActual} handleChangeValue={this.handleChangeValue} submit={this.submit}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst MetaList = (props) => {\n\n  if (props.metas) {\n    return (\n      <List mediaList>\n        {props.metas.map((meta) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/metas/\" + meta.id}\n            ignoreCache={true}\n            title={meta.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default MetaList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport MetaList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst MetaIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.metas} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/metas/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <MetaList metas={props.metas}/>\n    </Page>\n  )\n}\nexport default MetaIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport MetaIndex from \"../../containers/metas/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      metas: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('metas', this.state.page);\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas  && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n  render() {\n    const {metas} = this.state;\n    return(<MetaIndex metas={metas}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Card, CardFooter, Button, Link } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\n\nconst MetaForm = (props) => {\n  return (\n    <Card>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.meta.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListInput\n          label={dict.label}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.meta.label}\n          onInput={(e) => {\n            props.handleChange({ label: e.target.value })\n          }}\n        />\n        <ListInput\n          label=\"Schema\"\n          type=\"text\"\n          inputStyle={{direction: 'ltr'}}\n          defaultValue={JSON.stringify(props.meta.meta_schema)}\n          placeholder=\"JSON\"\n          onInput={(e) => {\n            props.handleChange({ metaSchema: e.target.value })\n          }}\n        ></ListInput>\n\n\n      </List>\n      <CardFooter>\n        <Link></Link>\n        <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n      </CardFooter>\n    </Card>\n  )\n}\nexport default MetaForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaForm from \"../../containers/metas/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class MetaCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      meta: {},\n      metaSchema: null,\n      title: null,\n      label: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, label: this.state.label,  meta_schema: this.state.metaSchema}\n    MyActions.setInstance('metas', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/metas/');\n  }\n\n\n\n  render() {\n    const {meta} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.meta_form} backLink={dict.back} />\n        <BlockTitle>{dict.meta_form}</BlockTitle>\n        <MetaForm meta={meta} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport MetaForm from \"../../containers/metas/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      meta : {},\n      title: null,\n      metaSchema: null,\n      id: null,\n      label: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, label: this.state.label, meta_schema: this.state.metaSchema}\n    MyActions.updateInstance('metas', data);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['metaId']) {\n      MyActions.getInstance('metas', this.$f7route.params['metaId']);\n    }\n  }\n\n\n  getInstance(){\n    var meta = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    console.log(meta);\n    if (meta && klass === 'Meta'){\n      this.setState({\n        title: meta.title,\n        id: meta.id,\n        meta: meta,\n        metaSchema: meta.metaSchema,\n        label: meta.label\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    console.log(obj);\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/metas/');\n  }\n\n\n  render() {\n        const {meta} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.meta_form} backLink={dict.back} />\n        <BlockTitle>{dict.meta_form}</BlockTitle>\n        <MetaForm meta={meta} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Actions, ActionsLabel, ActionsGroup, ActionsButton, Icon, Button, Sheet, Toolbar, Link, PageContent, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\n\n\nconst InteractionMenu = (props) => {\n  if (props.model){\n    return(\n      <React.Fragment>\n\n      <Actions id={\"actions-two-groups-\"+props.model.id}>\n        <ActionsGroup>\n          <ActionsLabel>{dict.social_acts}</ActionsLabel>\n          <ActionsButton onClick={() => props.interaction('Bookmark', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-bookmark\"></i>{dict.bookmark} ({props.model.bookmarks})</ActionsButton>\n          <ActionsButton onClick={() => props.interaction('Like', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-heart\"></i>{dict.like} ({props.model.likes})</ActionsButton>\n          <ActionsButton onClick={props.model.followed ? '':() => props.interaction('Follow', props.model.id, props.klass, props.sourceType, props.sourceId)}><i className=\"va ml-5 fa fa-link\"></i>{dict.follow} ({props.model.follows})</ActionsButton>\n        </ActionsGroup>\n        <ActionsGroup>\n          <ActionsButton color=\"red\">{dict.cancel}</ActionsButton>\n        </ActionsGroup>\n      </Actions>\n      \n      <Button className=\"col\"  href={false} actionsOpen={\"#actions-two-groups-\"+props.model.id}><i className=\"va fa fa-users\"></i></Button>\n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default InteractionMenu;\n","import React from \"react\";\nimport { Actions, ActionsLabel, ActionsGroup, ActionsButton, Icon, Button, Sheet, Toolbar, Link, PageContent, Block, ListInput, List, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst ShareMenu = (props) => {\n  if (props.model) {\n    if (props.channels) {\n      var options = []\n      for (let i = 0; i < props.channels.length; i++) {\n        options.push(\n          <option value={props.channels[i].id}>\n            {props.channels[i].title}\n          </option>\n        )\n      }\n    }\n    return (\n      <React.Fragment>\n        <Sheet className=\"demo-sheet\" opened={props.sheetOpened} onSheetClosed={() => { props.handleChange({ sheetOpened: false }) }}>\n          <Toolbar>\n            <div className=\"left\"></div>\n            <div className=\"right\">\n              <Link sheetClose>{dict.close}</Link>\n            </div>\n          </Toolbar>\n          {/*  Scrollable sheet content */}\n          <PageContent>\n\n            <List>\n              <ListInput\n                label={dict.channel}\n                type=\"select\"\n                onChange={(e) => {\n                  props.handleChange({ selectedChannel: e.target.value })\n                }\n                }\n              >\n                {options}\n              </ListInput>\n            </List>\n            <Block strong>\n              <Row tag=\"p\">\n                <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n              </Row>\n            </Block>\n          </PageContent>\n        </Sheet>\n\n        <Button className=\"col\" href={false} sheetOpen=\".demo-sheet\"><i class=\"va fa fa-retweet\"></i></Button>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ShareMenu;\n","import React from \"react\";\nimport { List, ListInput, BlockTitle, Block, Link, Button, Card, CardHeader, CardFooter} from 'framework7-react';\nimport { dict} from '../../Dict';\n\nconst CommentForm = (props) => {\n    return (\n      <Card>\n        <CardHeader>{dict.comment_form}</CardHeader>\n        <List form>\n        <ListInput\n            label={dict.comment}\n            type=\"textarea\"\n            placeholder='...'\n            maxlength='300'\n            resizable\n            clearButton={true}\n            onInput={(e) => {\n              props.handleChange({ commentContent: e.target.value})\n            }}\n            />\n        </List>\n        <CardFooter>\n          <Link></Link>\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </CardFooter>\n      </Card>\n    )\n  }\n  export default CommentForm;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Row, Link, Col } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst CommentList = (props) => {\n    var items = []\n    if (props.comments) {\n\n        for (let i = 0; i < props.comments.length; i++) {\n            var time = <React.Fragment><Link onClick={() => props.removeComment(props.comments[i].id)}><i className=\"va ml-5 fa fa-trash\"></i></Link><Moment locale=\"fa\" fromNow ago>{props.comments[i].created_at}</Moment>{dict.ago}</React.Fragment>\n            items.push(\n                <ListItem\n                    className='some-link'\n                    text={time}\n                    subtitle={props.comments[i].content}\n                >\n                    <img slot=\"media\" src={props.comments[i].profile.avatar} width=\"44\" />\n                </ListItem>\n\n            )\n        }\n\n        return (\n            <React.Fragment>\n                <BlockTitle>{dict.comments}</BlockTitle>\n                <List mediaList inset>\n                    {items}\n                </List>\n                <Row noGap>\n                    <Col></Col>\n                    <Col className='center'>\n                        <a className=\"gray-color\" onClick={() => props.loadMore()}>\n                            {dict.more}\n                        </a>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default CommentList;","import React from \"react\";\nimport {List, BlockTitle, ListItem, Block, Row, Col, Button } from 'framework7-react';\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { Editor } from 'react-draft-wysiwyg';\nimport { dict } from '../../Dict';\nimport InteractionMenu from \"../interactions/menu\"\nimport ShareMenu from \"../shares/menu\"\nimport CommentForm from \"../comments/form\"\nimport CommentList from \"../comments/list\"\n\n\nconst PostShow = (props) => {\n  if (props.post && props.post.draft) {\n    const contentState = convertFromRaw(props.post.draft);\n    const editorState = EditorState.createWithContent(contentState);\n    return (\n      <React.Fragment>\n        <Block>\n          <Row>\n            <Col width='50' tabletWidth='70'></Col>\n            <Col width=\"25\" tabletWidth='15' className='ml-5'>\n              <Button fill><ShareMenu model={props.post} submit={props.submit} channels={props.channels} klass='Post' sheetOpened={props.sheetOpened} handleChange={props.handleChange} klass='Channel' interaction={props.interaction} /></Button>\n            </Col>\n            <Col width=\"25\" tabletWidth='15'>\n              <Button fill><InteractionMenu model={props.post} klass='Post' interaction={props.interaction} /></Button>\n            </Col>\n          </Row>\n        </Block>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.post.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <Editor editorState={editorState}\n          toolbar={{ options: [] }}\n          readOnly={true} \n          />\n\n        <CommentForm post={props.post} submit={props.submitComment} handleChange={props.handleChange} />\n        <CommentList comments={props.comments} removeComment={props.removeComment} loadMore={props.loadMore}/>\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default PostShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostShow from \"../../containers/posts/show\";\n\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.submitComment = this.submitComment.bind(this);\n    this.removeComment = this.removeComment.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n\n\n    this.state = {\n      post: null,\n      id: null,\n      page: 1,\n      channels: null,\n      selectedChannel: null,\n      channelId: null,\n      sheetOpened: false,\n      commentContent: '',\n      comments: null,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.$$('.some-link').on('taphold', function (f7) {\n      f7.dialog.alert('Tap hold fired!');\n    });\n    MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token);\n    MyActions.getList('channels/my', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var post = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (post && klass === 'Post') {\n      this.setState({\n        post: post,\n        id: post.id,\n        comments: post.comments\n      });\n    }\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels && klass === 'Channel') {\n      this.setState({\n        channels: channels,\n        channelId: channels[0].id\n      });\n    }\n    console.log(channels)\n  }\n\n  setInstance() {\n    var post = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (post && klass === 'Post') {\n      this.setState({\n        post: post,\n        comments: post.comments,\n        page: 1\n      });\n    }\n  }\n\n  loadMore() {\n    this.setState({ page: this.state.page + 1 }, () => {\n      MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token, this.state.page);\n    });\n  }\n\n  fab() {\n    if (this.state.post) {\n      return (\n        <Fab href={\"/posts/\" + this.state.post.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  submit() {\n    var data = { post_id: this.state.id, channel_id: this.state.selectedChannel }\n    MyActions.setInstance('shares', data, this.state.token);\n    const self = this;\n    self.$f7.sheet.close('.demo-sheet')\n  }\n\n  submitComment() {\n    var data = { post_id: this.state.id, content: this.state.commentContent }\n    MyActions.setInstance('comments', data, this.state.token);\n  }\n\n  removeComment(id) {\n    var data = { id: id }\n    MyActions.removeInstance('comments', data, this.state.token, this.state.page);\n  }\n\n  render() {\n    const { post, sheetOpened, channels, comments } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.posts} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <PostShow post={post} comments={comments} channels={channels} submitComment={this.submitComment} removeComment={this.removeComment} submit={this.submit} interaction={this.interaction} handleChange={this.handleChangeValue} loadMore={this.loadMore} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, Link, CardContent, Row, Col} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from \"../../Dict\";\n\nconst PostList = (props) => {\n  if (props.posts && props.posts.length > 0) {\n    return (\n      <React.Fragment>\n        <Row noGap>\n          {props.posts.map((post) =>\n            <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}> \n              <Card className=\"demo-facebook-card\">\n                <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><Link tooltip={post.profile.fullname} href={'/profiles/' + post.profile.id}><img src={post.profile.avatar} height=\"34\" /></Link></div>\n                  <div className=\"demo-facebook-name \">\n                    <div className=\"demo-facebook-profile \">\n                      <Link className=\"gray-color\" href={'/profiles/' + post.profile.id}>{post.profile.fullname.substring(0, 40)}</Link>\n                    </div>\n                    <Link tooltip={dict.view} className=\"gray-color\" href={'/posts/' + post.id}>{post.title.substring(0, 15) + '..'}</Link></div>\n                  <div className=\"demo-facebook-date\">\n                    <InteractionMenu model={post} klass='Post' interaction={props.interaction} sourceType={props.sourceType} sourceId={props.sourceId} />\n                  </div>\n                </CardHeader>\n                <CardContent className='lightgray-color fs-12'>\n                  {post.content.substring(0, 150) + '...'}\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/posts/' + post.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n              </Card>\n            </Col>\n          )}\n        </Row>\n        <Row noGap>\n          <Col></Col>\n          <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n          </Col>\n          <Col></Col>\n        </Row>\n      </React.Fragment>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default PostList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport PostList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst PostIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.posts} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n        </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/posts/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <PostList posts={props.posts} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default PostIndex;\n","\nexport function loggedIn() {\n  console.log('>>>>>>>>>>>>>>>>>>>>>');\n    var token = window.localStorage.getItem('token');\n    if (token) {\n      return true\n    } else {\n      this.$f7router.navigate('/login/');\n    }\n\n}\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport PostIndex from \"../../containers/posts/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Post extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      posts: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('posts', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ posts: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('posts/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  setInstance() {\n    var post = ModelStore.getIntance()\n    if (post) {\n      this.setState({ posts: this.state.posts.map(el => (el.id === post.id ? Object.assign({}, el, post) : el)) });\n    }\n  }\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('posts/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('posts', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n  getList() {\n    var posts = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (posts.length > 0 && klass === 'Post') {\n      this.setState({\n        posts: this.state.posts.concat(posts),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (<PostIndex interaction={this.interaction} loadMore={this.loadMore} posts={posts} search={this.search} />)\n  }\n}\n","import React from \"react\";\n\nconst ChannelOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.content){\n\n    for (let i = 0; i < props.content.length; i++) {\n      options.push(\n        <option value={props.content[i].id}>\n          {props.content[i].title}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default ChannelOptions;","import React from \"react\";\nimport { List, ListItem, ListInput, Link, CardFooter, Button, Card, CardHeader } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport ChannelOptions from \"../channels/options\";\n\n\nimport fa from '../../js/fa.js';\nconst PostForm = (props) => {\n  if (props.post) {\n    var channels = null;\n    if (props.channels) {\n      channels =\n        <ListItem\n          title={dict.channel}\n          smartSelect\n          smartSelectParams={{ pageBackLinkText: dict.back, searchbar: true, searchbarPlaceholder: dict.search }}\n        >\n          <select name=\"content\"\n            defaultValue={props.channelId}\n            onChange={(e) => {\n              props.handleChange({ channelId: e.target.value })\n            }}>\n            <ChannelOptions content={props.channels} />\n          </select>\n        </ListItem>\n    }\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.new_post}</CardHeader>\n          <List form>\n            {channels}\n            <ListInput\n              label={dict.title + '*'}\n              type=\"text\"\n              placeholder='...'\n              maxlength='65'\n              value={props.post.title}\n              onInput={(e) => {\n                props.handleChange({ title: e.target.value })\n              }}\n            />\n            <Editor\n              editorState={props.editorState}\n              placeholder={dict.content}\n              localization={{\n                locale: 'fa',\n                translations: fa\n              }}\n              toolbar={{\n                options: ['inline', 'list', 'link', 'image'],\n                inline: { options: ['bold', 'italic', 'underline'] },\n                image: {\n                  uploadCallback: props.uploadImageCallBack,\n                  previewImage: true,\n                },\n              }}\n              onEditorStateChange={props.onEditorStateChange}\n            />\n          </List>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default PostForm;\n","export function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'http://localhost:3001/v1/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostForm from \"../../containers/posts/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { uploadImageCallBack } from \"./uploader.js\"\n\nexport default class PostCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      post: {},\n      channels: null,\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      channelId: null,\n      interaction: null,\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit() {\n    const blocks = convertToRaw(this.state.editorState.getCurrentContent()).blocks;\n    const value = blocks.map(block => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    var data = { title: this.state.title, content: value, channel_id: this.state.channelId, draft: convertToRaw(this.state.editorState.getCurrentContent()) }\n    if (this.state.title) {\n      MyActions.setInstance('posts', data, this.state.token);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  onEditorStateChange(editorState) {\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('channels/my', this.state.page, {}, this.state.token);\n  }\n\n  componentDidUpdate(prev, prevstate) {\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels && klass === 'Channel') {\n      this.setState({\n        channels: channels,\n      });\n    }\n  }\n\n  setInstance() {\n    const self = this;\n    this.$f7router.navigate('/posts/');\n  }\n\n\n\n\n\n  render() {\n    const { post, editorState, channels } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.post_form} />\n        <PostForm post={post} channels={channels} editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit} handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack} />\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PostForm from \"../../containers/posts/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class PostUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      post: {title: '', draft: ''},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      id: null,\n      title: null,\n      draft: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, draft:convertToRaw(this.state.editorState.getCurrentContent())}\n    MyActions.updateInstance('posts', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['postId']) {\n      MyActions.getInstance('posts', this.$f7route.params['postId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var post = ModelStore.getIntance()\n\n    if (post){\n      const contentState = convertFromRaw(post.draft);\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        post: post,\n        title: post.title,\n        id: post.id,\n        editorState: editorState\n      });\n    }\n    console.log(post);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/posts/');\n  }\n\n\n  render() {\n    const { post, editorState} = this.state;\n    return (\n      <Page>\n        <Navbar title=\"Form\" backLink={dict.back} />\n        <BlockTitle>{dict.workflow_form}</BlockTitle>\n        <PostForm post={post}  editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Link } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from \"../../Dict\";\n\nconst NotificationList = (props) => {\n  if (props.notifications && props.notifications.length > 0) {\n    function profileLink(profile){\n      return(<Link href='/profiles/'>{profile.fullname}</Link>)\n    }\n\n    function colorClass(notification){\n      if (!notification.seen){\n        return 'bg-blonde'\n      }\n    }\n    return (\n      <List mediaList>\n        {props.notifications.map((notification) =>\n          <ListItem\n            className={colorClass(notification)}\n            key={crypto.lib.WordArray.random(32)}\n            link={'/' + notification.target_type+ '/'+ notification.target_id}\n            title={notification.content}\n            subtitle={profileLink(notification.profile)}\n          >\n          <img slot=\"media\" src={notification.profile.avatar} width=\"44\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default NotificationList;\n","import React from \"react\";\nimport { Page, Navbar, Subnavbar, Searchbar, BlockTitle, Link, Fab, Icon, Toolbar, Tabs, Tab, Block } from 'framework7-react';\nimport NotificationList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst NotificationIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.notifications} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n\n      <NotificationList notifications={props.notifications} loadMore={props.loadMore} />\n\n    </Page>\n  )\n}\nexport default NotificationIndex;\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport NotificationIndex from \"../../containers/notifications/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../../components/users/loggedIn.js\"\n\n\nexport default class Notification extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      notifications: [],\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getList('notifications', this.state.page, {}, this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ notifications: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('notifications/search', this.state.page, { q: this.state.query });\n    });\n\n  }\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('notifications', this.state.page, {}, this.state.token);\n      });\n    }\n  }\n\n\n\n  setInstance() {\n    var notification = ModelStore.getIntance()\n    if (notification) {\n      this.setState({ notifications: this.state.notifications.map(el => (el.id === notification.id ? Object.assign({}, el, notification) : el)) });\n    }\n  }\n\n  getList() {\n    var notifications = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (notifications.length > 0 && klass === 'Notification') {\n      this.setState({\n        notifications: this.state.notifications.concat(notifications),\n      });\n    }\n    var data = {}\n    MyActions.setInstance('notifications', data, this.state.token);\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { notifications } = this.state;\n    return (<NotificationIndex interaction={this.interaction} loadMore={this.loadMore} notifications={notifications} search={this.search} />)\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, Link, Card, Block, Row, Col, Button, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport InteractionMenu from \"../interactions/menu\"\nimport ShareMenu from \"../shares/menu\"\nimport PostList from \"../posts/list\"\n\nconst ChannelShow = (props) => {\n  if (props.channel) {\n    console.log(props.channel.posts)\n    return (\n      <React.Fragment>\n        <Block>\n          <Row noGap>\n            <Col width='80'></Col>\n\n            <Col width=\"20\">\n              <Button><InteractionMenu model={props.channel} klass='Channel' interaction={props.interaction} sourceType='Channel' sourceId={props.channel.id} /></Button>\n            </Col>\n          </Row>\n        </Block>\n        <Row noGap>\n          <Col width='100' tabletWidth='50'>\n            <Card>\n              <CardHeader className='fs-12'>{props.channel.title}</CardHeader>\n              <CardContent className='lightgray-color fs-12'>{props.channel.content}</CardContent>\n            </Card>\n          </Col>\n          <Col width='100' tabletWidth='50'>\n            <Card>\n              <CardHeader className='fs-12'>{dict.admins}</CardHeader>\n              <CardContent>\n                <Link tooltip={props.channel.profile.fullname} href={'/profiles/' + props.channel.profile.id}><div className=\"demo-facebook-avatar\"><img src={props.channel.profile.avatar} width=\"34\" height=\"34\" /></div></Link>\n              </CardContent>\n            </Card>\n          </Col>\n        </Row>\n\n        <BlockTitle>{dict.recent_posts}</BlockTitle>\n        <PostList posts={props.channel.posts} interaction={props.interaction} sourceType='Channel' sourceId={props.channel.id} />\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ChannelShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  Link,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelShow from \"../../containers/channels/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n\n    this.state = {\n      channel: null,\n      sheetOpened: false,\n      token: window.localStorage.getItem('token'),\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    MyActions.getInstance('channels', this.$f7route.params['channelId'], this.state.token);\n  }\n\n  getInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (channel && klass === 'Channel'){\n      this.setState({\n        channel: channel,\n      });\n    }\n    console.log('channel', channel);\n  }\n\n  setInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if(channel && klass === 'Channel'){\n      this.setState({\n        channel: channel,\n      });\n    }\n    console.log(channel);\n  }\n\n\n  fab(){\n    if (this.state.channel){\n      return(\n        <Fab href={\"/channels/\"+this.state.channel.id+\"/edit\"} target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const {channel, sheetOpened} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.channels} backLink={dict.back} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        </Navbar>\n\n        {this.fab()}\n        <ChannelShow channel={channel} sheetOpened={sheetOpened} interaction={this.interaction} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, CardHeader, BlockTitle, Link, CardFooter, CardContent, Row, Col, Menu, MenuItem, MenuDropdown, Icon, MenuDropdownItem } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport InteractionMenu from \"../interactions/menu\"\nimport { dict } from '../../Dict';\n\nconst ChannelList = (props) => {\n  if (props.channels && props.channels.length > 0) {\n    return (\n      <React.Fragment>\n      <Row noGap>\n        {props.channels.map((channel) =>\n          <Col width=\"100\" tabletWidth=\"33\" key={crypto.lib.WordArray.random(128/8)}>\n            <Card className=\"demo-facebook-card\">\n              <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><img src={channel.avatar} width=\"34\" height=\"34\" /></div>\n                <div className=\"demo-facebook-title \"><Link className=\"gray-color\" href={'/channels/' + channel.id}>{channel.title.substring(0, 30)}</Link></div>\n                <div className=\"demo-facebook-date\"><InteractionMenu model={channel} klass='Channel' interaction={props.interaction} sourceType='Channel' sourceId={channel.id} /></div>\n              </CardHeader>\n              <CardContent className='lightgray-color'>\n                  <span className='fs-12'>{channel.content.substring(0, 120) + '...'}</span>\n                  <div className=\"demo-facebook-more\">\n                    <Link className=\"gray-color\" href={'/channels/' + channel.id}>\n                      {dict.view}\n                      <i className=\"va fa fa-arrow-left mr-2\"></i>\n                    </Link>\n                  </div>\n                </CardContent>\n            </Card>\n          </Col>\n        )}\n      </Row>\n      <Row noGap>\n        <Col></Col>\n        <Col className='center mb-20'>\n          <a className=\"gray-color\" onClick={() => props.loadMore()}>\n            {dict.more}\n          </a>\n        </Col>\n        <Col></Col>\n      </Row>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ChannelList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, Subnavbar, Link, BlockTitle, Fab, Icon, Tabs, Tab, Block, Toolbar} from 'framework7-react';\nimport ChannelList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ChannelIndex = (props) => {\n  return (\n    <Page pageContent={false}>\n      <Navbar title={dict.channels} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <Toolbar tabbar bottom>\n        <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-link\"></i></Link>\n        <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-plug\"></i></Link>\n        <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-user-o\"></i></Link>\n      </Toolbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/channels/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <Tabs swipeable>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-2\" className=\"page-content\" >\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\" >\n          <Block>\n            <ChannelList channels={props.channels} interaction={props.interaction} loadMore={props.loadMore} />\n          </Block>\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\nexport default ChannelIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ChannelIndex from \"../../containers/channels/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport {loggedIn} from \"../../components/users/loggedIn.js\"\n\n\nexport default class Channel extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n    this.interaction = this.interaction.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.search = this.search.bind(this);\n    this.loadMore = this.loadMore.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      channels: [],\n      query: null,\n      page: 1,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData(){\n    MyActions.getList('channels', this.state.page, {} , this.state.token);\n  }\n\n  search(obj) {\n    this.setState({ channels: [], page: 1 });\n    this.setState(obj, () => {\n      MyActions.getList('channels/search', this.state.page, { q: this.state.query });\n    });\n  }\n\n\n  setInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if(channel && klass === 'Channel') {\n      this.setState({channels: this.state.channels.map(el => (el.id === channel.id ? Object.assign({}, el, channel) : el))});\n    }\n  }\n\n\n\n  loadMore() {\n    if (this.state.query && this.state.query.length > 0) {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('channels/search', this.state.page, {q: this.state.query }, this.state.token);\n      });\n    } else {\n      this.setState({ page: this.state.page + 1 }, () => {\n        MyActions.getList('channels', this.state.page, {}, this.state.token);\n      });\n    }\n\n  }\n\n  getList() {\n    var channels = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (channels.length > 0 && klass === 'Channel') {\n      this.setState({\n        channels: this.state.channels.concat(channels),\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const {channels} = this.state;\n    return(<ChannelIndex interaction={this.interaction} search={this.search} loadMore={this.loadMore} channels={channels}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nimport fa from '../../js/fa.js';\nconst ChannelForm = (props) => {\n  if (props.channel) {\n    return (\n      <React.Fragment>\n        <List form>\n          <ListInput\n            label={dict.title}\n            type=\"text\"\n            placeholder='...'\n            value={props.title}\n            onInput={(e) => {\n              props.handleChange({ title: e.target.value})\n            }}\n            />\n          <ListInput\n            label={dict.abstract}\n            type=\"textarea\"\n            placeholder='...'\n            value={props.content}\n            resizable\n            onInput={(e) => {\n              props.handleChange({ content: e.target.value})\n            }}\n            />\n        </List>\n        <Block strong className='minus-z'>\n          <Row tag=\"p\">\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </Row>\n        </Block>\n      </React.Fragment>\n    )} else {\n      return (null)\n    }\n  }\n  export default ChannelForm;\n","export function uploadImageCallBack(file) {\n  return new Promise(\n    (resolve, reject) => {\n      const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n      xhr.open('POST', 'http://localhost:3001/v1/uploads');\n      xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n      const data = new FormData(); // eslint-disable-line no-undef\n      data.append('upload[image]', file);\n      xhr.send(data);\n      xhr.addEventListener('load', () => {\n        const response = JSON.parse(xhr.responseText);\n        resolve(response);\n      });\n      xhr.addEventListener('error', () => {\n        const error = JSON.parse(xhr.responseText);\n        reject(error);\n      });\n    },\n  );\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelForm from \"../../containers/channels/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport {uploadImageCallBack} from \"./uploader.js\"\n\nexport default class ChannelCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n    this.uploadImageCallBack = uploadImageCallBack.bind(this);\n\n\n    this.state = {\n      channel: {},\n      editorState: EditorState.createEmpty(),\n      token: window.localStorage.getItem('token'),\n      title: null,\n      content: null,\n      interaction: null,\n      page: 0\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n\n\n  submit(){\n    var data = {title: this.state.title, content: this.state.content}\n    MyActions.setInstance('channels', data, this.state.token);\n  }\n\n  onEditorStateChange(editorState){\n    this.setState({\n      editorState,\n    });\n  };\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n  }\n\n\n  getList() {\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/channels/');\n  }\n\n\n\n\n\n  render() {\n    const {channel, editorState} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.channel_form} backLink={dict.back} />\n        <BlockTitle>{dict.channel_form}</BlockTitle>\n        <ChannelForm channel={channel}  editorState={editorState} onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue} uploadImageCallBack={this.uploadImageCallBack}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ChannelForm from \"../../containers/channels/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class ChannelUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.onEditorStateChange = this.onEditorStateChange.bind(this)\n    this.getList = this.getList.bind(this)\n\n    this.state = {\n      channel: {title: '', draft: ''},\n      token: window.localStorage.getItem('token'),\n      id: null,\n      title: null,\n      content: null,\n      page: 0\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, content: this.state.content}\n    MyActions.updateInstance('channels', data, this.state.token);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['channelId']) {\n      MyActions.getInstance('channels', this.$f7route.params['channelId'], this.state.token);\n    }\n  }\n\n  getList() {\n\n  }\n\n  getInstance(){\n    var channel = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (channel && klass === 'Channel'){\n      this.setState({\n        channel: channel,\n        title: channel.title,\n        id: channel.id,\n        content: channel.content\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  onEditorStateChange(editorState){\n      this.setState({\n      editorState,\n    });\n  };\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/channels/');\n  }\n\n\n  render() {\n    const { channel, title, content} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.form} backLink={dict.back} />\n        <BlockTitle>{dict.channel_form}</BlockTitle>\n        <ChannelForm channel={channel} title={title} content={content}  onEditorStateChange={this.onEditorStateChange} submit={this.submit}  handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserOptions = (props) => {\n  var options = [<option value=''></option>]\n  if(props.users){\n    for (let i = 0; i < props.users.length; i++) {\n      options.push(\n        <option value={props.users[i].id}>\n          {props.users[i].email}\n        </option>\n      )\n    }\n\n  }\n  return options\n\n}\nexport default UserOptions;\n","import React from \"react\";\nimport { List, ListItem, BlockTitle, Block, Row, Button} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport UserOptions from \"../users/options\";\n\nconst AssignmentForm = (props) => {\n    return (\n      <React.Fragment>\n        <BlockTitle>{dict.assignment_form}</BlockTitle>\n        <List form inset>\n          <ListItem\n            title={dict.email}\n            smartSelect\n            >\n            <select name=\"content\"\n              onChange={(e) => {  props.handleChange({ user_id: e.target.value}) }}>\n              <UserOptions users={props.users}/>\n            </select>\n          </ListItem>\n        </List>\n      <Block strong inset>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n      </React.Fragment>\n    )\n  }\n  export default AssignmentForm;\n","  \nimport React from \"react\";\nimport { List, ListItem, Button, Icon} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport crypto from 'crypto-js';\nconst UserList = (props) => {\n    var body = []\n  if(props.users){\n\n    \n    for (let i = 0; i < props.users.length; i++) {\n        var td = []\n        body.push(<tr key={crypto.lib.WordArray.random(32)}>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].id}</td>\n        <td key={crypto.lib.WordArray.random(32)}>{props.users[i].email}</td>\n        <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n            <Button color='gray' onClick={() => props.removeRole(props.users[i].id)}>\n              <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n            </Button>\n          </td>\n        </tr>)\n    }\n\n  return(\n    <div className=\"data-table card\">\n      <table>\n        <thead>\n          <tr>\n            <td>ID</td>\n            <td>Email</td>\n          </tr>\n        </thead>\n\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\nelse {\n  return(null)\n}\n}\nexport default UserList;","import React from \"react\";\nimport { List, Icon, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport UserOptions from \"../users/options\";\n\nconst AccessControlForm = (props) => {\n    return (\n        <React.Fragment>\n            <BlockTitle>{dict.access_control_form}</BlockTitle>\n            <List form inset>\n                <ListInput\n                    label={dict.item}\n                    type=\"text\"\n                    placeholder='...'\n                    onInput={(e) => {\n                        props.handleChange({ abilityTitle: e.target.value })\n                    }}\n                />\n                <ListInput\n                    label={dict.value}\n                    type=\"select\"\n                    defaultValue={true}\n                    placeholder=\"Please choose...\"\n                    onChange={(e) => {\n                        props.handleChange({ abilityValue: e.target.value })\n                    }}\n                >\n                    <option value={true}>{dict.true}</option>\n                    <option value={false}>{dict.false}</option>\n                </ListInput>\n            </List>\n            <Block strong inset>\n                <Row tag=\"p\">\n                    <Button className=\"col\" fill onClick={props.addAbility}>{dict.submit}</Button>\n                </Row>\n            </Block>\n        </React.Fragment>\n    )\n}\nexport default AccessControlForm;\n","\nimport React from \"react\";\nimport { List, ListItem, Button, Icon, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nconst AbilityList = (props) => {\n    var body = []\n    if (props.ability) {\n\n\n        for (let i = 0; i < props.ability.length; i++) {\n            var td = []\n            body.push(<tr key={crypto.lib.WordArray.random(32)}>\n                <td key={crypto.lib.WordArray.random(32)}>{props.ability[i].title}</td>\n                <td key={crypto.lib.WordArray.random(32)}>{dict[props.ability[i].value]}</td>\n                <td className=\"checkbox-cell\" key={crypto.lib.WordArray.random(32)}>\n                    <Button color='gray' onClick={() => props.removeAbility(props.ability[i].title)}>\n                        <Icon ios=\"f7:trash\" aurora=\"f7:trash\" md=\"material:trash\"></Icon>\n                    </Button>\n                </td>\n            </tr>)\n        }\n\n        return (\n            <React.Fragment>\n            <BlockTitle>{dict.access_control_list}</BlockTitle>\n            <div className=\"data-table card\">\n                <table>\n                    <thead>\n                        <tr>\n                            <td>{dict.title}</td>\n                            <td>{dict.value}</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {body}\n                    </tbody>\n                </table>\n            </div>\n            </React.Fragment>\n\n        )\n    }\n    else {\n        return (null)\n    }\n}\nexport default AbilityList;","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst RoleShow = (props) => {\n  if (props.role){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.role.title}</ListItem>\n        </List>\n\n        <AccessControlList  ability={props.ability} removeAbility={props.removeAbility}/>\n        <AccessControlForm  addAbility={props.addAbility} handleChange={props.handleChange} />\n        \n\n        <AssignmentList users={props.assignedUsers} removeRole={props.removeRole} />\n        <AssignmentForm users={props.users}  submit={props.submit} handleChange={props.handleChange}/>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default RoleShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleShow from \"../../containers/roles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeRole = this.removeRole.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('roles', this.$f7route.params['roleId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role') {\n      this.setState({\n        role: role,\n        id: role.id,\n        assignedUsers: role.users,\n        ability: role.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { role_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('roles/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.role) {\n      return (\n        <Fab href={\"/roles/\" + this.state.role.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeRole(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, role_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('roles/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { role, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.roles} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <RoleShow role={role} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeRole={this.removeRole} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst RoleList = (props) => {\n\n  if (props.roles) {\n    return (\n      <List mediaList>\n        {props.roles.map((role) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/roles/\" + role.id}\n            ignoreCache={true}\n            title={role.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default RoleList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport RoleList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst RoleIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.roles} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/roles/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <RoleList roles={props.roles}/>\n    </Page>\n  )\n}\nexport default RoleIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport RoleIndex from \"../../containers/roles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      roles: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('roles', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var roles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (roles && klass === 'Role'){\n      this.setState({\n        roles: roles,\n      });\n    }\n  }\n\n  render() {\n    const {roles} = this.state;\n    return(<RoleIndex roles={roles}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst RoleForm = (props) => {\n  if (props.defaultRole) {\n    var isDefaultRole = true;\n  } else {\n    var isDefaultRole = false\n  }\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.role}</BlockTitle>\n      <List form>\n        <ListInput\n          label={dict.title}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.role.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListItem radio value={false} checked={!isDefaultRole} name=\"defaultRole\" title={dict.NonDefault}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) })\n          }}>\n        </ListItem>\n        <ListItem radio value={true} checked={isDefaultRole} name=\"defaultRole\" title={dict.Default}\n          onChange={(e) => {\n            console.log(e)\n            props.handleChange({ defaultRole: JSON.parse(e.target.value) });\n          }}>\n        </ListItem>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default RoleForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class RoleCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role: {},\n      default_role: true,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.setInstance('roles', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n\n  render() {\n    const {role} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport RoleForm from \"../../containers/roles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class DocumentUpdate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      role : {},\n      defaultRole: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n\n  }\n\n\n  submit(){\n    var data = {id:this.state.id, title: this.state.title, default_role: this.state.defaultRole}\n    MyActions.updateInstance('roles', data,  this.state.token);\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    if (this.$f7route.params['roleId']) {\n      MyActions.getInstance('roles', this.$f7route.params['roleId'],  this.state.token);\n    }\n  }\n\n\n  getInstance(){\n    var role = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (role && klass === 'Role'){\n      this.setState({\n        title: role.title,\n        id: role.id,\n        role: role,\n        defaultRole: role.default_role\n      });\n    }\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/roles/');\n  }\n\n\n  render() {\n        const {role, defaultRole} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.role_form} backLink={dict.back} />\n        <BlockTitle>{dict.role_form}</BlockTitle>\n        <RoleForm role={role} defaultRole={defaultRole} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport AssignmentForm from \"../assignments/form\";\nimport AssignmentList from \"../assignments/list\";\n\nimport AccessControlForm from \"../access_controls/form\";\nimport AccessControlList from \"../access_controls/list\";\n\nconst SettingShow = (props) => {\n  if (props.setting){\n    return(\n      <React.Fragment>\n        <BlockTitle>{dict.title}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.setting.title}</ListItem>\n        </List>\n\n        <BlockTitle>{dict.content}</BlockTitle>\n        <List simple-list>\n          <ListItem>{props.setting.content}</ListItem>\n        </List>\n\n        \n      </React.Fragment>\n    )\n  } else {\n    return(null)\n  }\n}\nexport default SettingShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingShow from \"../../containers/settings/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.getList = this.getList.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.removeSetting = this.removeSetting.bind(this);\n    this.addAbility = this.addAbility.bind(this);\n    this.removeAbility = this.removeAbility.bind(this);\n\n    \n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      setting: null,\n      id: null,\n      users: null,\n      assignedUsers: null,\n      user_id: null,\n      abilityTitle: '',\n      abilityValue: true,\n      ability: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('settings', this.$f7route.params['settingId'], this.state.token);\n    MyActions.getList('users', this.state.page, {}, this.state.token);\n  }\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        setting: setting,\n        id: setting.id,\n        assignedUsers: setting.users,\n        ability: setting.ability\n      });\n    }\n  }\n\n  getList() {\n    var users = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (users && klass === 'User') {\n      this.setState({\n        users: users,\n      });\n    }\n  }\n\n  submit() {\n    var data = { setting_id: this.state.id, user_id: this.state.user_id }\n    MyActions.setInstance('users/assignments', data, this.state.token);\n  }\n\n  addAbility() {\n    var data = { id: this.state.id, ability_title: this.state.abilityTitle, ability_value: this.state.abilityValue}\n    MyActions.setInstance('settings/abilities', data, this.state.token);\n  }\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  fab() {\n    if (this.state.setting) {\n      return (\n        <Fab href={\"/settings/\" + this.state.setting.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  removeSetting(user_id) {\n    MyActions.removeInstance('users/assignments', { user_id: user_id, setting_id: this.state.id }, this.state.token);\n  }\n\n  removeAbility(title){\n    MyActions.removeInstance('settings/abilities', { id: this.state.id, title: title }, this.state.token);\n  }\n\n  render() {\n    const { setting, users, assignedUsers, ability } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.settings} backLink={dict.back} />\n        <BlockTitle></BlockTitle>\n        {this.fab()}\n        <SettingShow setting={setting} users={users} ability={ability} removeAbility={this.removeAbility} assignedUsers={assignedUsers} addAbility={this.addAbility} removeSetting={this.removeSetting} submit={this.submit} handleChange={this.handleChangeValue} />\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { List, ListItem} from 'framework7-react';\nimport crypto from 'crypto-js';\n\nconst SettingList = (props) => {\n\n  if (props.settings) {\n    return (\n      <List mediaList>\n        {props.settings.map((setting) =>\n          <ListItem\n            key={crypto.lib.WordArray.random(32)}\n            link={\"/settings/\" + setting.id}\n            ignoreCache={true}\n            title={setting.title}\n            after=\"\"\n            subtitle=\"\"\n            text=\"\"\n            ></ListItem>\n        )}\n      </List>\n    )} else {\n      return (<ul></ul>)\n    }\n  }\n  export default SettingList;\n","import React from \"react\";\nimport { Page, Navbar, List, BlockTitle, ListItem, Fab, Icon,Preloader, Block} from 'framework7-react';\nimport SettingList from \"./list\"\nimport { dict} from '../../Dict';\n\nconst SettingIndex = (props) => {\n  return(\n    <Page>\n      <Navbar title={dict.settings} backLink={dict.back} >\n      </Navbar>\n      <BlockTitle>{dict.list}</BlockTitle>\n      <Fab href=\"/settings/new\" target=\"#main-view\"  position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <SettingList settings={props.settings}/>\n    </Page>\n  )\n}\nexport default SettingIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport SettingIndex from \"../../containers/settings/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      settings: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('settings', this.state.page, {}, this.state.token);\n  }\n\n  getList() {\n    var settings = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (settings && klass === 'Setting'){\n      this.setState({\n        settings: settings,\n      });\n    }\n  }\n\n  render() {\n    const {settings} = this.state;\n    return(<SettingIndex settings={settings}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, Block, Row, Button, BlockTitle } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\n\nconst SettingForm = (props) => {\n  console.log(props)\n  return (\n    <React.Fragment>\n      <BlockTitle>{dict.setting}</BlockTitle>\n      <List form>\n        <ListInput\n          label='Title'\n          inputStyle={{direction: 'ltr'}}\n          type=\"text\"\n          placeholder='...'\n          defaultValue={props.title}\n          onInput={(e) => {\n            props.handleChange({ title: e.target.value })\n          }}\n        />\n        <ListInput\n          label=\"Schema\"\n          type=\"text\"\n          inputStyle={{direction: 'ltr'}}\n          value={props.content}\n          placeholder=\"JSON\"\n          onInput={(e) => {\n            props.handleChange({ content: e.target.value })\n          }}\n        ></ListInput>\n      </List>\n\n      <Block strong>\n        <Row tag=\"p\">\n          <Button className=\"col\" fill disabled={!props.editing} onClick={props.submit}>{dict.submit}</Button>\n        </Row>\n      </Block>\n    </React.Fragment>\n  )\n}\nexport default SettingForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      title: '',\n      content: '',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit(){\n    var data = {title: this.state.title, content: this.state.content}\n    MyActions.setInstance('settings', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/settings/');\n  }\n\n\n\n  render() {\n    const {title, content} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.setting_form} backLink={dict.back} />\n        <BlockTitle>{dict.setting_form}</BlockTitle>\n        <SettingForm title={title} content={content} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport SettingForm from \"../../containers/settings/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class SettingCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      title: '',\n      id: null,\n      content: '',\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('settings', this.$f7route.params['settingId'], this.state.token);\n  }\n\n\n  getInstance() {\n    var setting = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (setting && klass === 'Setting') {\n      this.setState({\n        title: setting.title,\n        id: setting.id,\n        content: setting.content\n      });\n    }\n  }\n\n  submit(){\n    var data = {id: this.state.id, title: this.state.title, content: this.state.content}\n    MyActions.updateInstance('settings', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/settings/');\n  }\n\n\n\n  render() {\n    const {title, content} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.setting_form} backLink={dict.back} />\n        <BlockTitle>{dict.setting_form}</BlockTitle>\n        <SettingForm title={title} content={content} submit={this.submit} editing={true} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card, List, ListItem, CardContent, CardHeader} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from '../../Dict';\n\nconst ChannelCompactList = (props) => {\n  if (props.channels && props.channels.length > 0) {\n    console.log(props.channels)\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>\n            {dict.channels}\n          </CardHeader>\n          <CardContent>\n          <List>\n            {props.channels.map((channel) =>\n              <ListItem\n                link={\"/channels/\"+channel.id}\n                title={channel.title.substring(0, 30)}\n              ></ListItem>\n            )}\n          </List>\n          </CardContent>\n        </Card>\n      </React.Fragment>\n\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ChannelCompactList;\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst ExpertiesList = (props) => {\n\n    if (props.experties) {\n        if (props.editable) {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a onClick={() => props.removeExperties(expert)}>\n                            <Chip text={expert} mediaBgColor=\"orange\">\n                                <Icon slot=\"media\" aurora=\"fa:times\"></Icon>\n                            </Chip>\n                        </a>\n                    )}\n                </Row>\n            )\n        } else {\n            return (\n                <Row noGap>\n                    {props.experties.map((expert) =>\n                        <a href={'/experties/'+expert}><Chip text={expert} /></a>\n                    )}\n                </Row>\n            )\n        }\n\n    } else {\n        return (null)\n    }\n}\nexport default ExpertiesList;\n","import React from \"react\";\nimport { List, ListItem, Link} from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\n\nconst SimpleList = (props) => {\n  if(props.profiles){\n    return (\n      <List>\n        {props.profiles.map((profile) =>\n          <ListItem\n          title={profile.fullname}\n          subtitle=\"...\"\n          link={'/profiles/'+profile.id}>\n          <img slot=\"media\" src={profile.avatar} width=\"25\" />\n          </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default SimpleList;\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"./simpleList\"\n\nconst Followers = (props) => {\n    console.log(props)\n    if (props.followers) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.followers}\n                </CardHeader>\n                <CardContent>\n                    <SimpleList profiles={props.followers} />\n                </CardContent>\n            </Card>)\n    } else {\n        return (null)\n    }\n}\nexport default Followers;\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Icon } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"./simpleList\"\n\nconst Followers = (props) => {\n    if (props.followees) {\n        return (\n            <Card>\n                <CardHeader>\n                    {dict.followees}\n                </CardHeader>\n                <CardContent>\n                    <SimpleList profiles={props.followees} />\n                </CardContent>\n            </Card>)\n    } else {\n        return (null)\n    }\n}\nexport default Followers;\n","import React from \"react\";\nimport { Card, Chip, CardContent, CardHeader, Col, Row, Tab, Tabs, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport { Chart } from 'react-charts'\nimport { color } from \"d3\";\nimport ChannelCompactList from \"../channels/compactlist\"\nimport ExpertiesList from \"./experties\";\nimport InteractionMenu from \"../interactions/menu\"\nimport Followers from \"./followers\"\nimport Followees from \"./followees\"\n\nconst ProfileShow = (props) => {\n  const data = React.useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n      },\n      {\n        label: 'Series 2',\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n      }\n    ],\n    []\n  )\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  if (props.profile) {\n    return (\n\n      <Tabs>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"50\">\n\n              <Card>\n                <CardHeader>\n                  <img src={props.profile.avatar} width=\"80\"></img>\n                  <div className='profile-card'>{props.profile.fullname}</div>\n                  <div className=\"demo-facebook-date\"><InteractionMenu model={props.profile} klass='Profile' interaction={props.interaction} sourceType='Profile' sourceId={props.profile.id} /></div>\n                </CardHeader>\n                <CardContent>\n                  <ExpertiesList experties={props.profile.experties} />\n                </CardContent>\n              </Card>\n              <Followers followers={props.profile.followers} profile={props.profile}/>\n            </Col>\n\n            <Col width=\"100\" tabletWidth=\"50\">\n            <ChannelCompactList channels={props.channels} />\n            <Followees followees={props.profile.followees} profile={props.profile}/>\n            </Col>\n          </Row>\n\n        </Tab>\n        <Tab id=\"tab-2\" className=\"page-content\">\n          <Row noGap>\n            <Col width=\"100\" tabletWidth=\"50\">\n              {/*\n                  <div\n                    style={{\n                      display: 'inline-block',\n                      borderRadius: '5px',\n                      padding: '10px',\n                      marginRight: '10px',\n                      backgroundColor: 'white',\n                      width: '250px',\n                      height: '200px'\n                    }}\n                  > \n                    <Chart data={data} axes={axes} />\n                    </div>\n                    */}\n              {props.metas.map((m) =>\n                <React.Fragment>\n                  <ActualList meta={m.meta} editable={false} actuals={m.actuals} removeActual={props.removeActual} />\n                </React.Fragment>\n              )}\n            </Col>\n          </Row>\n        </Tab>\n\n        <Tab id=\"tab-3\" className=\"page-content\">\n          <div className=\"block-title\">Only Tablet Side By Side</div>\n          <Row>\n            <Col width=\"100\" tabletWidth=\"100\">\n              <div className=\"timeline timeline-sides\">\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"timeline-item\">\n                  <div className=\"timeline-item-date\">21 <small>DEC</small></div>\n                  <div className=\"timeline-item-divider\"></div>\n                  <div className=\"timeline-item-content\">\n                    <div className=\"timeline-item-inner\">\n                      <div className=\"timeline-item-time\">12:30</div>\n                      <div className=\"timeline-item-title\">Title</div>\n                      <div className=\"timeline-item-subtitle\">Subtitle</div>\n                      <div className=\"timeline-item-text\">Text</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs >\n\n    )\n  } else {\n    return (null)\n  }\n}\nexport default ProfileShow;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Link,\n  Tabs,\n  Toolbar,\n  Tab,\n  Range,\n  Block,\n  Icon, Fab\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileShow from \"../../containers/profiles/show\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.addTag = this.addTag.bind(this);\n    this.interaction = this.interaction.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profile: null,\n      id: null,\n      actuals: null,\n      metas: null,\n      channels: null,\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('profiles', this.$f7route.params['profileId'], this.state.token);\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        profile: profile,\n        id: profile.id,\n        actuals: profile.actuals,\n        metas: profile.metas,\n        channels: profile.channels,\n      });\n    }\n  }\n\n  fab() {\n    if (this.state.profile) {\n      return (\n        <Fab href={\"/profiles/\" + this.state.profile.id + \"/edit\"} target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"lime\">\n          <Icon ios=\"f7:edit\" aurora=\"f7:edit\" md=\"material:edit\"></Icon>\n          <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n        </Fab>\n      )\n    }\n  }\n\n  addTag(){\n    console.log('hey');\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type = null, source_id = null) {\n    var data = { interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id }\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const { profile, actuals, metas, channels } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profiles} backLinkForce={true} backLink={dict.back} />\n        <Toolbar tabbar bottom>\n          <Link tabLink=\"#tab-1\" tabLinkActive><i className=\"va ml-5 fa fa-user-circle\"></i></Link>\n          <Link tabLink=\"#tab-2\"><i className=\"va ml-5 fa fa-bar-chart\"></i></Link>\n          <Link tabLink=\"#tab-3\"><i className=\"va ml-5 fa fa-list\"></i></Link>\n        </Toolbar>\n        {this.fab()}\n        <ProfileShow profile={profile} actuals={actuals} channels={channels} metas={metas} addTag={this.addTag} interaction={this.interaction}/>\n\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, CardHeader, Card, CardContent, Col, Link, CardFooter, Chip, Gauge } from 'framework7-react';\nimport crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport ExpertiesList from \"./experties\";\nimport InteractionMenu from \"../interactions/menu\"\n\nconst ProfileList = (props) => {\n\n  if (props.profiles) {\n    console.log(props.profiles)\n    return (\n      <Row noGap>\n        {props.profiles.map((profile) =>\n          <Col width=\"100\" tabletWidth=\"33\">\n            <Card className=\"demo-facebook-card\">\n              <CardHeader className=\"no-border\">\n                <div className=\"demo-facebook-avatar\"><img src={profile.avatar} width=\"34\" height=\"34\" /></div>\n                <div className=\"demo-facebook-name \"><Link className=\"gray-color\" href={'/profiles/' + profile.id}>{profile.fullname.substring(0, 30)}</Link></div>\n                <div className=\"demo-facebook-date\"><InteractionMenu model={profile} klass='Profile' interaction={props.interaction} sourceType='Profile' sourceId={profile.id} /></div>\n        <div className=\"demo-facebook-sub\">\n          <Moment locale=\"fa\" fromNow ago>{profile.last_login}</Moment> {dict.ago}\n          </div>\n              </CardHeader>\n              <CardFooter className='profile-footer'>\n              <ExpertiesList experties={profile.experties} />\n              </CardFooter>\n            </Card>\n          </Col>\n        )}\n      </Row>\n    )\n  } else {\n    return (<ul></ul>)\n  }\n}\nexport default ProfileList;\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, Subnavbar, Fab, Icon, Link } from 'framework7-react';\nimport ProfileList from \"./list\"\nimport { dict } from '../../Dict';\n\nconst ProfileIndex = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.profiles} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n        <Subnavbar inner={false}>\n          <Searchbar\n            disableButtonText={dict.cancel}\n            placeholder={dict.search}\n            onChange={(e) => {\n              props.search({ query: e.target.value })\n            }}\n          ></Searchbar>\n        </Subnavbar>\n      </Navbar>\n      <BlockTitle></BlockTitle>\n      <Fab href=\"/profiles/new\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"deeporange\">\n        <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n        <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n      </Fab>\n      <ProfileList profiles={props.profiles} interaction={props.interaction} />\n\n    </Page>\n  )\n}\nexport default ProfileIndex;\n","import React from \"react\"\nimport { Page,Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport ProfileIndex from \"../../containers/profiles/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { dict} from '../../Dict';\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n\nexport default class Layout extends React.Component {\n  constructor() {\n    super();\n    this.getList = this.getList.bind(this);\n    this.search = this.search.bind(this);\n    this.interaction = this.interaction.bind(this);\n    \n    \n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profiles: null,\n      query: null,\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    const f7: Framework7 = Framework7.instance;\n    f7.toast.show({ text: dict.receiving, closeTimeout: 2000, position: 'top'});\n    MyActions.getList('profiles', this.state.page);\n  }\n\n  search(obj){\n    this.setState(obj, () => {\n      MyActions.getList('profiles/search', this.state.page, {q: this.state.query});\n  });    \n  }\n\n  getList() {\n    var profiles = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (profiles && klass === 'Profile'){\n      this.setState({\n        profiles: profiles,\n      });\n    }\n  }\n\n  interaction(interaction_type, interactionable_id, interactionable_type, source_type=null, source_id=null){\n    var data = {interaction_type: interaction_type, interactionable_id: interactionable_id, interactionable_type: interactionable_type, source_type: source_type, source_id: source_id}\n    MyActions.setInstance('interactions', data, this.state.token);\n  }\n\n  render() {\n    const {profiles} = this.state;\n    return(<ProfileIndex profiles={profiles} interaction={this.interaction} search={this.search}/>)\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListInput, CardFooter, Button, Card, Link, CardHeader, CardContent, Row } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\nimport ActualForm from \"../actuals/form\";\nimport ActualList from \"../actuals/list\";\nimport ExpertiesList from \"./experties\";\nimport ImageUploader from 'react-images-upload';\nconst ProfileForm = (props) => {\n  if (props.name && props.metas) {\n    return (\n      <React.Fragment>\n        <Card>\n          <CardHeader>{dict.profile_info}</CardHeader>\n          <CardContent>\n            <List form>\n              <ListInput\n                label={dict.firstname}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.name}\n                onInput={(e) => {\n                  props.handleChange({ name: e.target.value })\n                }}\n              />\n\n              <ListInput\n                label={dict.surename}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.surename}\n                onInput={(e) => {\n                  props.handleChange({ surename: e.target.value })\n                }}\n              />\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submit}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n        <Card>\n          <CardHeader>{dict.experties}</CardHeader>\n          <CardContent>\n            <List>\n              <ListItem>\n                <ExpertiesList experties={props.experties} editable={true} removeExperties={props.removeExperties}/>\n              </ListItem>\n            </List>\n\n            <List form>\n              <ListInput\n                label={dict.new_experties}\n                type=\"text\"\n                placeholder='...'\n                defaultValue={props.expert}\n                onInput={(e) => {\n                  props.handleChange({ expert: e.target.value })\n                }}\n              />\n\n            </List>\n          </CardContent>\n          <CardFooter>\n            <Link></Link>\n            <Button className=\"col\" fill onClick={props.submitExperties}>{dict.submit}</Button>\n          </CardFooter>\n        </Card>\n\n\n        <Card>\n          <CardHeader>\n            <img src={props.avatar} width=\"80\"></img>\n          </CardHeader>\n          <ImageUploader\n            withIcon={true}\n            buttonText={dict.choose_image}\n            onChange={props.onDrop}\n            buttonClassName='upload-btn'\n            imgExtension={['.jpg', '.jpeg', '.png']}\n            maxFileSize={5242880}\n          />\n        </Card>\n        {props.metas.map((m) =>\n          <React.Fragment>\n            <ActualList meta={m.meta} editable={true} actuals={m.actuals} removeActual={props.removeActual} />\n            <ActualForm meta={m.meta} submit={props.submitFields} onChangeValue={props.handleChangeValueFields} />\n          </React.Fragment>\n        )}\n\n\n      </React.Fragment>\n    )\n  } else {\n    return (null)\n  }\n\n}\nexport default ProfileForm;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  List,\n  ListItem,\n  ListInput,\n  Toggle,\n  BlockTitle,\n  Row,\n  Button,\n  Range,\n  Block,\n  Icon\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    \n    \n    this.getList = this.getList.bind(this);\n\n    this.state = {\n      profile: {},\n      metas: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      name: 'dd',\n      surename: '',\n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"got_list\", this.getList);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"got_list\", this.getList);\n  }\n\n  componentDidMount(){\n    this.loadData();\n\n  }\n\n  loadData(){\n    MyActions.getList('metas', this.state.page);\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        metas: profile.metas,\n        profile: profile\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {profile, metas, name, avatar, surename} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue}/>\n      </Page>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar,\n  BlockTitle,\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport ProfileForm from \"../../containers/profiles/form\"\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class ProfileCreate extends Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.handleChangeValueFields = this.handleChangeValueFields.bind(this);\n    this.removeActual = this.removeActual.bind(this);\n    this.getInstance = this.getInstance.bind(this);\n    this.submitFields = this.submitFields.bind(this);\n    this.onDrop = this.onDrop.bind(this);    \n    this.getList = this.getList.bind(this);\n    this.submitExperties = this.submitExperties.bind(this);\n    this.removeExperties = this.removeExperties.bind(this);\n    \n\n    \n\n    this.state = {\n      name: null,\n      surename: null,\n      metas: null,\n      metaId: null,\n      actuals: null,\n      experties: null,\n      expert: null,\n      token: window.localStorage.getItem('token'),\n      fields: [],\n      id: null, \n      pictures: [],\n      avatar: null,\n    }\n  }\n\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.getInstance);\n    ModelStore.on(\"deleted_instance\", this.getInstance);\n    ModelStore.on(\"file_posted\", this.getInstance);    \n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.getInstance);\n    ModelStore.removeListener(\"deleted_instance\", this.getInstance);\n    ModelStore.removeListener(\"file_posted\", this.getInstance);\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  loadData(){\n    if (this.$f7route.params['profileId']) {\n      MyActions.getInstance('profiles', this.$f7route.params['profileId']);\n    }\n  }\n\n  onDrop(picture) {\n    console.log(picture[0])\n    MyActions.fileUpload('profiles', this.state.id, picture[0], this.state.token);\n  }\n\n\n  submit(){\n    var data = {id: this.state.id, name: this.state.name, surename: this.state.surename}\n    MyActions.updateInstance('profiles', data, this.state.token);\n  }\n\n  submitFields(){\n    var data = {meta_id: this.state.metaId, content: this.state.fields}\n    MyActions.setInstance('actuals', data, this.state.token);\n  }\n\n  submitExperties(){\n    var data = {id: this.state.id, experties: this.state.expert}\n    MyActions.setInstance('profiles/add_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n  removeExperties(experties){\n    var data = {id: this.state.id, experties: experties}\n    MyActions.setInstance('profiles/remove_experties/'+this.$f7route.params['profileId'], data, this.state.token);\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  handleChangeValueFields(key, value, metaId) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].fid && fields[i].fid === key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { fid: key, value: value, metaId: metaId }\n          this.setState(newState);\n        } else {\n          this.setState({ fields: this.state.fields.concat({ fid: key, value: value , metaId:metaId}) });\n        }\n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ fid: key, value: value, metaId:metaId }) });\n    }\n  }\n\n\n  setInstance(){\n    const self = this;\n    this.$f7router.navigate('/profiles/');\n  }\n\n  getInstance() {\n    var profile = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profile && klass === 'Profile') {\n      this.setState({\n        id: profile.id, \n        metas: profile.metas,\n        name: profile.name,\n        surename : profile.surename,\n        avatar: profile.avatar,\n        experties: profile.experties\n      });\n    }\n  }\n\n\n  removeActual(uuid){\n    MyActions.removeInstance('actuals', {uuid: uuid});\n  }\n\n  getList() {\n    var metas = ModelStore.getList()\n    var klass = ModelStore.getKlass()\n    if (metas && klass === 'Meta'){\n      this.setState({\n        metas: metas,\n      });\n    }\n  }\n\n\n\n  render() {\n    const {name, surename, avatar,metas, actuals, experties} = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.profile_form} backLink={dict.back} />\n        <BlockTitle>{dict.profile_form}</BlockTitle>\n        <ProfileForm name={name} avatar={avatar} surename={surename} metas={metas} experties={experties} onDrop={this.onDrop} removeActual={this.removeActual} submitFields={this.submitFields} submit={this.submit} editing={true} handleChangeValueFields={this.handleChangeValueFields} handleChange={this.handleChangeValue} submitExperties={this.submitExperties} removeExperties={this.removeExperties}/>\n      </Page>\n    );\n  }\n}\n\n","import React from \"react\";\nimport { Page, Navbar, Searchbar, BlockTitle, NavRight, Fab, Icon, Link } from 'framework7-react'; import crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport 'moment/locale/fa';\nimport SimpleList from \"../profiles/simpleList\"\n\nconst FriendshipIndex = (props) => {\n    if (props.friendship) {\n        return (\n            <Page >\n                <Navbar title={dict.profiles} backLink={dict.back}>\n                    <Link panelOpen=\"right\">\n                        <Icon f7=\"bars\"></Icon>\n                    </Link>\n\n                </Navbar>\n                <BlockTitle></BlockTitle>\n                <SimpleList profiles={props.friendship.followees} />\n            </Page>\n        )\n    } else {\n        return (null)\n    }\n}\nexport default FriendshipIndex;\n","import React from \"react\"\nimport { Page, Fab, Icon } from 'framework7-react';\nimport ModelStore from \"../../stores/ModelStore\";\nimport FriendshipIndex from \"../../containers/friendships/index\"\nimport * as MyActions from \"../../actions/MyActions\";\nimport { loggedIn } from \"../users/loggedIn.js\"\n\n\nexport default class Friendship extends React.Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.loggedIn = loggedIn.bind(this);\n\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      friendship: null,\n      query: null,\n      page: 1\n    }\n  }\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n  }\n\n  componentDidMount() {\n    this.loggedIn();\n    this.loadData();\n  }\n\n  loadData() {\n    MyActions.getInstance('friendships', this.$f7route.params['sourceId'], this.state.token);\n  }\n\n\n  getInstance() {\n    var friendship = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (friendship && klass === 'Friendship') {\n      this.setState({\n        friendship: friendship,\n        id: friendship.id,\n      });\n    }\n    console.log(friendship, klass)\n  }\n\n\n\n  render() {\n    const { friendship } = this.state;\n    return (<FriendshipIndex  friendship={friendship}  />)\n  }\n}\n","import React from \"react\";\nimport { Page, Navbar, List, Button, ListItem, ListInput, Icon, Link, Card, CardHeader, CardContent, CardFooter } from 'framework7-react'; import crypto from 'crypto-js';\nimport { dict } from \"../../Dict\";\n\n\n\nconst PrivacyIndex = (props) => {\n    if (props.profilePrivacy) {\n        function findSetting(settings, title){\n            for (let i = 0; i < settings.length; i++) {\n                if(settings[i].title == title){\n                    return settings[i].value\n                }\n            }\n        }\n        function options(op, title,settings) {\n            var result = [<option></option>]\n            var selected = false\n            for (let i = 0; i < op.length; i++) {\n                if(op[i].title == findSetting(settings, title)){\n                    selected = true\n                } else {\n                    selected = false\n                }\n                result.push(\n                    <option value={op[i].title} selected={selected}>\n                        {op[i].label}\n                    </option>\n                )\n            }\n            return result\n        }\n\n\n        return (\n            <Page >\n                <Navbar title={dict.privacy_settings} backLink={dict.back}>\n                    <Link panelOpen=\"right\">\n                        <Icon f7=\"bars\"></Icon>\n                    </Link>\n                </Navbar>\n                <Card>\n                    <CardHeader>{dict.settings}</CardHeader>\n                    <CardContent>\n                        <List >\n                            {props.profilePrivacy.setting_schemas.map((schema) =>\n                                <ListInput\n                                    label={schema.label}\n                                    type=\"select\"\n                                    onChange={(e) => {\n                                        props.handleChangeValue( schema.title, e.target.value)\n                                    }\n                                    }\n                                >\n                                    {options(schema.options, schema.title ,props.privacySettings)}\n                                </ListInput>)}\n                        </List>\n                    </CardContent>\n                    <CardFooter>\n                        <Link></Link>\n                         <Button className=\"col\" fill  onClick={props.submit}>{dict.submit}</Button>          \n                    </CardFooter>\n                </Card>\n            </Page>\n        )\n    } else {\n        return (null)\n    }\n}\nexport default PrivacyIndex;\n","import React, { Component } from 'react';\nimport {\n  Page,\n  Navbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport PrivacyIndex from \"../../containers/privacy/index\"\n\nexport default class Layout extends Component {\n  constructor() {\n    super();\n    this.getInstance = this.getInstance.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n    \n    this.state = {\n      token: window.localStorage.getItem('token'),\n      profilePrivacy: null,\n      privacySettings: null,\n      fields: [],\n\n    }\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"got_instance\", this.getInstance);\n    ModelStore.on(\"set_instance\", this.setInstance);\n\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"got_instance\", this.getInstance);\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount() {\n    MyActions.getInstance('privacy', 1, this.state.token);\n  }\n\n  getInstance() {\n    var profilePrivacy = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (profilePrivacy && klass === 'Privacy') {\n      this.setState({\n        profilePrivacy: profilePrivacy,\n        privacySettings: profilePrivacy.privacy_settings,\n        fields : profilePrivacy.privacy_settings\n      });\n    }\n  }\n\n  setInstance(){\n    const self = this;\n    self.$f7.dialog.alert(dict.completed_successfully, dict.message);\n  }\n\n\n  submit() {\n    var data = { id: 1, privacy: this.state.fields}\n    MyActions.setInstance('privacy', data, this.state.token);\n  }\n\n\n\n  handleChangeValue(key, value) {\n    var fields = this.state.fields\n    if (fields.length > 0) {\n      for (let i = 0; i < fields.length; i++) {\n        if (fields[i].title && fields[i].title == key) {\n          let newState = Object.assign({}, this.state);\n          newState.fields[i] = { title: key, value: value }\n          this.setState(newState);\n        } \n      }\n    } else {\n      this.setState({ fields: this.state.fields.concat({ title: key, value: value }) });\n    }\n  }\n\n  render() {\n    const { profilePrivacy, privacySettings } = this.state;\n    return (\n      <Page>\n        <Navbar title={dict.privacy_settings} backLink={dict.back} />\n        <PrivacyIndex profilePrivacy={profilePrivacy} privacySettings={privacySettings} handleChangeValue={this.handleChangeValue} submit={this.submit}/>\n      </Page>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent className='mh-auto'>\n          <List >\n            <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            {/*<ListInput\n              label={dict.password}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Button fill className='fs-11 external f-color-black bg-teal' href=\"https://auth.ut.ac.ir:8443/cas/login?service=https%3A%2F%2Fsn.ut.ac.ir%2Fusers%2Fservice\"  animate={false} ignoreCache={true}>{dict.cas} </Button>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      token: window.localStorage.getItem('token'),\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    if(this.$f7route.params['token']) {\n      MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n    }\n    if(this.state.token && this.state.token.length > 10){\n      MyActions.setInstance('users/validate_token', {}, this.state.token);\n    }\n  }\n\n  submit(){\n    var data = {email: this.state.email, password: this.state.password}\n    MyActions.setInstance('users/login', data);\n  }\n\n  setInstance(){\n    var klass = ModelStore.getKlass()\n    if (klass === 'Login') {\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n    if (klass === 'Validate') {\n      this.$f7router.navigate('/');\n      window.location.reload()\n    }\n    console.log(klass)\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport LoginForm from \"../../containers/users/Login\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n  componentDidMount(){\n    MyActions.setInstance('users/validate_token', {}, this.$f7route.params['token']);\n  }\n\n  setInstance() {\n    var user = ModelStore.getIntance()\n    var klass = ModelStore.getKlass()\n    if (klass === 'Validate') {\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/');\n      window.location.reload()\n    } else {\n      this.$f7router.navigate('/login_error/');\n      window.location.reload()\n    }\n  }\n\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, password} = this.state;\n    return (\n      <LoginForm submit={this.submit} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, ListItem, ListInput, Navbar, Icon, Button, Page, LoginScreenTitle, ListButton, CardFooter, Card, CardHeader, CardContent } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst SignUpForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.sign_up} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.sign_up}</CardHeader>\n        <CardContent>\n          <List >\n            <ListInput\n              label={dict.firstname + ' *'}\n              placeholder={dict.enter_your_name}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ name: e.target.value })\n              }}\n            />\n\n            <ListInput\n              label={dict.surename + ' *'}\n              placeholder={dict.enter_your_surename}\n              type=\"text\"\n              name={crypto.lib.WordArray.random(32)}\n              onInput={(e) => {\n                props.handleChange({ surename: e.target.value })\n              }}\n            />\n\n\n            <ListInput\n              label={' * ' + dict.email}\n              type=\"email\"\n              validate\n              placeholder={dict.enter_your_email}\n              className='ltr'\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n          {/*\n            <ListInput\n              label={dict.password + ' *'}\n              type=\"password\"\n              placeholder={dict.enter_your_password}\n              autocomplete='new-password'\n              name={crypto.lib.WordArray.random(32)}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.password_confirmation + ' *'}\n              type=\"password\"\n              autocomplete='off'\n              placeholder={dict.enter_your_password_confirmation}\n              value={props.password}\n              onInput={(e) => {\n                props.handleChange({ password_confirmation: e.target.value })\n              }}\n            />*/}\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/login/\">{dict.if_registered}{'\\u00A0'}{dict.you_can_login} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.sign_up}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default SignUpForm;\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict } from '../../Dict';\nimport SignUpForm from \"../../containers/users/SignUp\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      email: '',\n      name: '',\n      surename: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  submit() {\n    this.$$('.btn').hide();\n    this.$$('.btn-notice').text(dict.submitting);\n    var data = { \n      email: this.state.email,\n       name: this.state.name, \n       surename: this.state.surename }\n    if (\n      (this.state.email && this.state.email.length > 0) &&\n      (this.state.name && this.state.name.length > 0) &&\n      (this.state.surename && this.state.surename.length > 0) \n      ) {\n      MyActions.setInstance('users/sign_up', data);\n    } else {\n      const self = this;\n      self.$f7.dialog.alert(dict.incomplete_data, dict.alert);\n    }\n  }\n\n  setInstance() {\n    var klass = ModelStore.getKlass()\n    if (klass === 'SignUp') {\n      this.$$('.btn').show();\n      this.$f7router.navigate('/verification/'+this.state.email);\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n    console.log(obj)\n  }\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <SignUpForm submit={this.submit} handleChange={this.handleChangeValue} />\n    )\n  }\n\n}\n","import React from \"react\";\nimport { Link, List, CardHeader, ListInput, CardContent, CardFooter, Button, Page, Card, Navbar, Icon } from 'framework7-react';\nimport { dict } from '../../Dict';\nimport crypto from 'crypto-js';\n\nconst LoginForm = (props) => {\n  return (\n    <Page>\n      <Navbar title={dict.verification} >\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </Navbar>\n      <Card>\n        <CardHeader>{dict.login}</CardHeader>\n        <CardContent >\n          <List >\n          <ListInput\n              label={dict.email}\n              type=\"text\"\n              autofocus={true}\n              placeholder={dict.enter_your_email}\n              value={props.email}\n              onInput={(e) => {\n                props.handleChange({ email: e.target.value })\n              }}\n            />\n            <ListInput\n              label={dict.verification_code}\n              type=\"text\"\n              placeholder={dict.enter_verification_code}\n              onInput={(e) => {\n                props.handleChange({ verificationCode: e.target.value })\n              }}\n            />\n          </List>\n        </CardContent>\n        <CardFooter>\n          <Link href=\"/sign_up/\" animate={false} ignoreCache={true}>{dict.you_can_sign_up} </Link>\n          <Link className=\"btn-notice\"></Link>\n          <Button className=\"col btn\" fill onClick={props.submit}>{dict.login}</Button>\n        </CardFooter>\n      </Card>\n    </Page>\n  )\n}\nexport default LoginForm;\n","import HomePage from './containers/layouts/HomePage.jsx';\nimport NotFoundPage from './containers/layouts/NotFoundPage';\nimport PanelRightPage from './containers/layouts/PanelRightPage';\n\n\nimport MetaShow from './components/metas/show';\nimport MetaIndex from './components/metas/index';\nimport MetaCreate from './components/metas/create';\nimport MetaUpdate from './components/metas/update';\n\n\nimport PostShow from './components/posts/show';\nimport PostIndex from './components/posts/index';\nimport PostCreate from './components/posts/create';\nimport PostUpdate from './components/posts/update';\n\nimport NotificationIndex from './components/notifications/index';\n\nimport ChannelShow from './components/channels/show';\nimport ChannelIndex from './components/channels/index';\nimport ChannelCreate from './components/channels/create';\nimport ChannelUpdate from './components/channels/update';\n\nimport RoleShow from './components/roles/show';\nimport RoleIndex from './components/roles/index';\nimport RoleCreate from './components/roles/create';\nimport RoleUpdate from './components/roles/update';\n\n\nimport SettingShow from './components/settings/show';\nimport SettingIndex from './components/settings/index';\nimport SettingCreate from './components/settings/create';\nimport SettingUpdate from './components/settings/update';\n\n\nimport ProfileShow from './components/profiles/show';\nimport ProfileIndex from './components/profiles/index';\nimport ProfileCreate from './components/profiles/create';\nimport ProfileUpdate from './components/profiles/update';\n\nimport FriendshipIndex from './components/friendships/index';\n\nimport PrivacyIndex from './components/privacy/index';\n\nimport Login from './components/users/Login';\nimport LoginJwt from './components/users/LoginJwt';\nimport SignUp from './components/users/SignUp';\nimport Verification from './components/users/Verification';\n\n\n\nexport default [\n  {\n    path: '/',\n    component: HomePage,\n  },\n  {\n    path: '/login/',\n    component: Login,\n  },\n  {\n    path: '/sign_up/',\n    component: SignUp,\n  },\n  {\n    path: '/verification/:email',\n    component: Verification,\n  },\n  {\n    path: '/login_jwt/:token',\n    component: LoginJwt,\n  },\n  {\n    path: '/panel-right/',\n    component: PanelRightPage,\n  },\n  {\n    path: '/metas/',\n    component: MetaIndex,\n  },\n  {\n    path: '/metas/:metaId/edit',\n    component: MetaUpdate,\n  },\n  {\n    path: '/metas/new',\n    component: MetaCreate,\n  },\n  {\n    path: '/metas/:metaId',\n    component: MetaShow,\n  },\n\n  {\n    path: '/notifications/',\n    component: NotificationIndex,\n  },\n\n  {\n    path: '/posts/',\n    component: PostIndex,\n  },\n  {\n    path: '/posts/:postId/edit',\n    component: PostUpdate,\n  },\n  {\n    path: '/posts/new',\n    component: PostCreate,\n  },\n  {\n    path: '/posts/:postId',\n    component: PostShow,\n  },\n\n  {\n    path: '/channels/',\n    component: ChannelIndex,\n  },\n  {\n    path: '/channels/:channelId/edit',\n    component: ChannelUpdate,\n  },\n  {\n    path: '/channels/new',\n    component: ChannelCreate,\n  },\n  {\n    path: '/channels/:channelId',\n    component: ChannelShow,\n  },\n\n  {\n    path: '/roles/',\n    component: RoleIndex,\n  },\n  {\n    path: '/roles/:roleId/edit',\n    component: RoleUpdate,\n  },\n  {\n    path: '/roles/new',\n    component: RoleCreate,\n  },\n  {\n    path: '/roles/:roleId',\n    component: RoleShow,\n  },\n\n  {\n    path: '/profiles/',\n    component: ProfileIndex,\n  },\n  {\n    path: '/profiles/:profileId/edit',\n    component: ProfileUpdate,\n  },\n  {\n    path: '/profiles/new',\n    component: ProfileCreate,\n  },\n  {\n    path: '/profiles/:profileId',\n    component: ProfileShow,\n  },\n  {\n    path: '/friendships/:sourceId',\n    component: FriendshipIndex,\n  },\n  {\n    path: '/privacy_settings/',\n    component: PrivacyIndex,\n  },\n\n  {\n    path: '/settings/',\n    component: SettingIndex,\n  },\n  {\n    path: '/settings/:settingId/edit',\n    component: SettingUpdate,\n  },\n  {\n    path: '/settings/new',\n    component: SettingCreate,\n  },\n  {\n    path: '/settings/:settingId',\n    component: SettingShow,\n  },\n\n  {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n];\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab, Searchbar, Subnavbar\n} from 'framework7-react';\nimport { dict } from '../../Dict';\n\nexport default () => (\n  <Page className=\"no-swipe-panel\">\n    <Navbar>\n\n      <NavLeft>\n        <Link panelOpen=\"right\">\n          <Icon f7=\"bars\"></Icon>\n        </Link>\n      </NavLeft>\n    </Navbar>\n    <Toolbar bottom>\n      <Link>Left Link</Link>\n      <Link>Right Link</Link>\n    </Toolbar>\n    <Block strong>\n      <p></p>\n    </Block>\n    <BlockTitle></BlockTitle>\n    <List>\n\n    </List>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <BlockTitle></BlockTitle>\n    <Block strong>\n\n    </Block>\n    <List>\n    </List>\n    <Fab href=\"/document_form/\" target=\"#main-view\" position=\"left-bottom\" slot=\"fixed\" color=\"orange\">\n      <Icon ios=\"f7:add\" aurora=\"f7:add\" md=\"material:add\"></Icon>\n      <Icon ios=\"f7:close\" aurora=\"f7:close\" md=\"material:close\"></Icon>\n    </Fab>\n  </Page>\n);\n","import React from 'react';\nimport {\n  Page,\n  Navbar,\n  NavLeft,\n  NavTitle,\n  NavRight,\n  Link,\n  Toolbar,\n  Block,\n  BlockTitle,\n  List,\n  ListItem,\n  Row,\n  Col,\n  Button, Icon, Fab,Searchbar, Subnavbar, LoginScreenTitle, ListInput, ListButton, BlockFooter\n} from 'framework7-react';\nimport { dict} from '../../Dict';\nimport VerificationForm from \"../../containers/users/Verification\"\nimport ModelStore from \"../../stores/ModelStore\";\nimport * as MyActions from \"../../actions/MyActions\";\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\nexport default class extends React.Component {\n  constructor() {\n    super();\n    this.submit = this.submit.bind(this);\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n    this.setInstance = this.setInstance.bind(this);\n\n    this.state = {\n      verificationCode: '',\n      email: '',\n    };\n  }\n\n  componentWillMount() {\n    ModelStore.on(\"set_instance\", this.setInstance);\n  }\n\n  componentWillUnmount() {\n    ModelStore.removeListener(\"set_instance\", this.setInstance);\n  }\n\n  componentDidMount(){\n    this.setState({email: this.$f7route.params['email']})\n  }\n\n  submit(){\n    var data = {verification_code: this.state.verificationCode}\n    MyActions.setInstance('users/verify', data);\n  }\n\n  setInstance(){\n    var user = ModelStore.getIntance();\n    var klass = ModelStore.getKlass()\n    if (user && klass == 'Verify'){\n      window.localStorage.setItem('token', user.token);\n      this.$f7router.navigate('/');\n      window.location.reload()\n    }\n  }\n\n\n  handleChangeValue(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    const {username, email} = this.state;\n    return (\n      <VerificationForm submit={this.submit} email={email} handleChange={this.handleChangeValue}/>\n    )\n  }\n\n}\n","import React from 'react';\nimport { Page, Navbar, Block } from 'framework7-react';\n\nexport default () => (\n  <Page>\n    <Navbar title=\"Not found\" backLink=\"Back\" />\n    <Block strong>\n      <p>Sorry</p>\n      <p>Requested content not found.</p>\n    </Block>\n  </Page>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// Import Framework7\nimport Framework7 from 'framework7/framework7.esm.bundle';\n\n// Import Framework7-React plugin\nimport Framework7React from 'framework7-react';\n\n// Import main App component\nimport App from './components/App.jsx';\n\n// Framework7 styles\nimport 'framework7/css/framework7.bundle.rtl.min.css';\n\n// Icons\nimport './css/icons.css';\n\n// Custom app styles\nimport './css/app.css';\nimport './css/editor.css';\nimport './css/font-awesome.min.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n\nimport * as serviceWorker from './serviceWorker';\n\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React);\n\n// Mount React App\nReactDOM.render(React.createElement(App),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  App,\n  Panel,\n  View,\n  Statusbar,\n  Popup,\n  Page,\n  Navbar,\n  NavRight,\n  Link,\n  Block,\n  LoginScreen,\n  LoginScreenTitle,\n  List,\n  ListInput,\n  ListButton,\n  BlockFooter\n} from 'framework7-react';\n\nimport routes from '../routes';\n\nexport default function (props) {\n\n  // Framework7 parameters here\n  const f7params = {\n    id: 'io.framework7.testapp', // App bundle ID\n    name: 'Framework7', // App name\n    theme: 'aurora', // Automatic theme detection\n    panel: {\n      rightBreakpoint: 960,\n    },\n    touch: {\n      tapHold: true //enable tap hold events\n    },\n    view: {\n      //ignoreCache: true,\n      //reloadCurrent: true\n    },\n    // App routes\n    routes,\n  };\n\n  return (\n    <App params={f7params}>\n      {/* Statusbar */}\n      <Statusbar />\n\n      {/* Left Panel */}\n      <Panel left cover  themeDark>\n        <View url=\"/panel-left/\" />\n      </Panel>\n\n      {/* Right Panel */}\n      <Panel right reveal themeDark>\n        <View url=\"/panel-right/\"/>\n      </Panel>\n\n      {/* Main View */}\n      <View id=\"main-view\" url=\"/\" pushState={true}  main className=\"safe-areas\"/>\n\n    </App>\n  );\n};\n","module.exports = {\n\n  // Generic\n  'generic.add': 'افزودن',\n  'generic.cancel': 'لغو',\n\n  // BlockType\n  'components.controls.blocktype.h1': 'H1',\n  'components.controls.blocktype.h2': 'H2',\n  'components.controls.blocktype.h3': 'H3',\n  'components.controls.blocktype.h4': 'H4',\n  'components.controls.blocktype.h5': 'H5',\n  'components.controls.blocktype.h6': 'H6',\n  'components.controls.blocktype.blockquote': 'Blockquote',\n  'components.controls.blocktype.code': 'Code',\n  'components.controls.blocktype.blocktype': 'Block Type',\n  'components.controls.blocktype.normal': 'Normal',\n\n  // Color Picker\n  'components.controls.colorpicker.colorpicker': 'Color Picker',\n  'components.controls.colorpicker.text': 'Text',\n  'components.controls.colorpicker.background': 'Highlight',\n\n  // Embedded\n  'components.controls.embedded.embedded': 'Embedded',\n  'components.controls.embedded.embeddedlink': 'Embedded Link',\n  'components.controls.embedded.enterlink': 'Enter link',\n\n  // Emoji\n  'components.controls.emoji.emoji': 'Emoji',\n\n  // FontFamily\n  'components.controls.fontfamily.fontfamily': 'Font',\n\n  // FontSize\n  'components.controls.fontsize.fontsize': 'Font Size',\n\n  // History\n  'components.controls.history.history': 'History',\n  'components.controls.history.undo': 'Undo',\n  'components.controls.history.redo': 'Redo',\n\n  // Image\n  'components.controls.image.image': 'عکس',\n  'components.controls.image.fileUpload': 'بارگذاری',\n  'components.controls.image.byURL': 'پیوند',\n  'components.controls.image.dropFileText': 'اینجا را کلیک کنید ',\n\n  // Inline\n  'components.controls.inline.bold': 'Bold',\n  'components.controls.inline.italic': 'Italic',\n  'components.controls.inline.underline': 'Underline',\n  'components.controls.inline.strikethrough': 'Strikethrough',\n  'components.controls.inline.monospace': 'Monospace',\n  'components.controls.inline.superscript': 'Superscript',\n  'components.controls.inline.subscript': 'Subscript',\n\n  // Link\n  'components.controls.link.linkTitle': 'عنوان پیوند',\n  'components.controls.link.linkTarget': 'آدرس',\n  'components.controls.link.linkTargetOption': 'در پنجره جدید باز کن',\n  'components.controls.link.link': 'پیوند',\n  'components.controls.link.unlink': 'لغو پیوند',\n\n  // List\n  'components.controls.list.list': 'List',\n  'components.controls.list.unordered': 'Unordered',\n  'components.controls.list.ordered': 'Ordered',\n  'components.controls.list.indent': 'Indent',\n  'components.controls.list.outdent': 'Outdent',\n\n  // Remove\n  'components.controls.remove.remove': 'Remove',\n\n  // TextAlign\n  'components.controls.textalign.textalign': 'Text Align',\n  'components.controls.textalign.left': 'Left',\n  'components.controls.textalign.center': 'Center',\n  'components.controls.textalign.right': 'Right',\n  'components.controls.textalign.justify': 'Justify',\n};\n"],"sourceRoot":""}